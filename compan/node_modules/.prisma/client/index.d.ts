
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model usuario
 * 
 */
export type usuario = $Result.DefaultSelection<Prisma.$usuarioPayload>
/**
 * Model caracteristica
 * 
 */
export type caracteristica = $Result.DefaultSelection<Prisma.$caracteristicaPayload>
/**
 * Model servico
 * 
 */
export type servico = $Result.DefaultSelection<Prisma.$servicoPayload>
/**
 * Model categoria
 * 
 */
export type categoria = $Result.DefaultSelection<Prisma.$categoriaPayload>
/**
 * Model anuncio
 * 
 */
export type anuncio = $Result.DefaultSelection<Prisma.$anuncioPayload>
/**
 * Model configuracoes
 * 
 */
export type configuracoes = $Result.DefaultSelection<Prisma.$configuracoesPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuario.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuario.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuario`: Exposes CRUD operations for the **usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuario.findMany()
    * ```
    */
  get usuario(): Prisma.usuarioDelegate<ExtArgs>;

  /**
   * `prisma.caracteristica`: Exposes CRUD operations for the **caracteristica** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Caracteristicas
    * const caracteristicas = await prisma.caracteristica.findMany()
    * ```
    */
  get caracteristica(): Prisma.caracteristicaDelegate<ExtArgs>;

  /**
   * `prisma.servico`: Exposes CRUD operations for the **servico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Servicos
    * const servicos = await prisma.servico.findMany()
    * ```
    */
  get servico(): Prisma.servicoDelegate<ExtArgs>;

  /**
   * `prisma.categoria`: Exposes CRUD operations for the **categoria** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categorias
    * const categorias = await prisma.categoria.findMany()
    * ```
    */
  get categoria(): Prisma.categoriaDelegate<ExtArgs>;

  /**
   * `prisma.anuncio`: Exposes CRUD operations for the **anuncio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Anuncios
    * const anuncios = await prisma.anuncio.findMany()
    * ```
    */
  get anuncio(): Prisma.anuncioDelegate<ExtArgs>;

  /**
   * `prisma.configuracoes`: Exposes CRUD operations for the **configuracoes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracoes
    * const configuracoes = await prisma.configuracoes.findMany()
    * ```
    */
  get configuracoes(): Prisma.configuracoesDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.6.0
   * Query Engine version: e95e739751f42d8ca026f6b910f5a2dc5adeaeee
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    usuario: 'usuario',
    caracteristica: 'caracteristica',
    servico: 'servico',
    categoria: 'categoria',
    anuncio: 'anuncio',
    configuracoes: 'configuracoes'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'usuario' | 'caracteristica' | 'servico' | 'categoria' | 'anuncio' | 'configuracoes'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      usuario: {
        payload: Prisma.$usuarioPayload<ExtArgs>
        fields: Prisma.usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuarioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuarioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findFirst: {
            args: Prisma.usuarioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuarioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          findMany: {
            args: Prisma.usuarioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>[]
          }
          create: {
            args: Prisma.usuarioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          createMany: {
            args: Prisma.usuarioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usuarioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          update: {
            args: Prisma.usuarioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          deleteMany: {
            args: Prisma.usuarioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usuarioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usuarioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usuarioPayload>
          }
          aggregate: {
            args: Prisma.UsuarioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsuario>
          }
          groupBy: {
            args: Prisma.usuarioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuarioCountArgs<ExtArgs>,
            result: $Utils.Optional<UsuarioCountAggregateOutputType> | number
          }
        }
      }
      caracteristica: {
        payload: Prisma.$caracteristicaPayload<ExtArgs>
        fields: Prisma.caracteristicaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.caracteristicaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.caracteristicaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          findFirst: {
            args: Prisma.caracteristicaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.caracteristicaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          findMany: {
            args: Prisma.caracteristicaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>[]
          }
          create: {
            args: Prisma.caracteristicaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          createMany: {
            args: Prisma.caracteristicaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.caracteristicaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          update: {
            args: Prisma.caracteristicaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          deleteMany: {
            args: Prisma.caracteristicaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.caracteristicaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.caracteristicaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$caracteristicaPayload>
          }
          aggregate: {
            args: Prisma.CaracteristicaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCaracteristica>
          }
          groupBy: {
            args: Prisma.caracteristicaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CaracteristicaGroupByOutputType>[]
          }
          count: {
            args: Prisma.caracteristicaCountArgs<ExtArgs>,
            result: $Utils.Optional<CaracteristicaCountAggregateOutputType> | number
          }
        }
      }
      servico: {
        payload: Prisma.$servicoPayload<ExtArgs>
        fields: Prisma.servicoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.servicoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.servicoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          findFirst: {
            args: Prisma.servicoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.servicoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          findMany: {
            args: Prisma.servicoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>[]
          }
          create: {
            args: Prisma.servicoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          createMany: {
            args: Prisma.servicoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.servicoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          update: {
            args: Prisma.servicoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          deleteMany: {
            args: Prisma.servicoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.servicoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.servicoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$servicoPayload>
          }
          aggregate: {
            args: Prisma.ServicoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateServico>
          }
          groupBy: {
            args: Prisma.servicoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ServicoGroupByOutputType>[]
          }
          count: {
            args: Prisma.servicoCountArgs<ExtArgs>,
            result: $Utils.Optional<ServicoCountAggregateOutputType> | number
          }
        }
      }
      categoria: {
        payload: Prisma.$categoriaPayload<ExtArgs>
        fields: Prisma.categoriaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          findFirst: {
            args: Prisma.categoriaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          findMany: {
            args: Prisma.categoriaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>[]
          }
          create: {
            args: Prisma.categoriaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          createMany: {
            args: Prisma.categoriaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.categoriaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          update: {
            args: Prisma.categoriaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          deleteMany: {
            args: Prisma.categoriaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.categoriaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.categoriaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoriaPayload>
          }
          aggregate: {
            args: Prisma.CategoriaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoria>
          }
          groupBy: {
            args: Prisma.categoriaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriaCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriaCountAggregateOutputType> | number
          }
        }
      }
      anuncio: {
        payload: Prisma.$anuncioPayload<ExtArgs>
        fields: Prisma.anuncioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.anuncioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.anuncioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          findFirst: {
            args: Prisma.anuncioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.anuncioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          findMany: {
            args: Prisma.anuncioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>[]
          }
          create: {
            args: Prisma.anuncioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          createMany: {
            args: Prisma.anuncioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.anuncioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          update: {
            args: Prisma.anuncioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          deleteMany: {
            args: Prisma.anuncioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.anuncioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.anuncioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$anuncioPayload>
          }
          aggregate: {
            args: Prisma.AnuncioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAnuncio>
          }
          groupBy: {
            args: Prisma.anuncioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AnuncioGroupByOutputType>[]
          }
          count: {
            args: Prisma.anuncioCountArgs<ExtArgs>,
            result: $Utils.Optional<AnuncioCountAggregateOutputType> | number
          }
        }
      }
      configuracoes: {
        payload: Prisma.$configuracoesPayload<ExtArgs>
        fields: Prisma.configuracoesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configuracoesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configuracoesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          findFirst: {
            args: Prisma.configuracoesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configuracoesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          findMany: {
            args: Prisma.configuracoesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>[]
          }
          create: {
            args: Prisma.configuracoesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          createMany: {
            args: Prisma.configuracoesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.configuracoesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          update: {
            args: Prisma.configuracoesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          deleteMany: {
            args: Prisma.configuracoesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.configuracoesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.configuracoesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$configuracoesPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracoesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateConfiguracoes>
          }
          groupBy: {
            args: Prisma.configuracoesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ConfiguracoesGroupByOutputType>[]
          }
          count: {
            args: Prisma.configuracoesCountArgs<ExtArgs>,
            result: $Utils.Optional<ConfiguracoesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuarioCountOutputType
   */

  export type UsuarioCountOutputType = {
    anuncio: number
  }

  export type UsuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    anuncio?: boolean | UsuarioCountOutputTypeCountAnuncioArgs
  }

  // Custom InputTypes

  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuarioCountOutputType
     */
    select?: UsuarioCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsuarioCountOutputType without action
   */
  export type UsuarioCountOutputTypeCountAnuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: anuncioWhereInput
  }



  /**
   * Count Type AnuncioCountOutputType
   */

  export type AnuncioCountOutputType = {
    caracteristicas: number
    categorias: number
    servicos: number
  }

  export type AnuncioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caracteristicas?: boolean | AnuncioCountOutputTypeCountCaracteristicasArgs
    categorias?: boolean | AnuncioCountOutputTypeCountCategoriasArgs
    servicos?: boolean | AnuncioCountOutputTypeCountServicosArgs
  }

  // Custom InputTypes

  /**
   * AnuncioCountOutputType without action
   */
  export type AnuncioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnuncioCountOutputType
     */
    select?: AnuncioCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * AnuncioCountOutputType without action
   */
  export type AnuncioCountOutputTypeCountCaracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: caracteristicaWhereInput
  }


  /**
   * AnuncioCountOutputType without action
   */
  export type AnuncioCountOutputTypeCountCategoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriaWhereInput
  }


  /**
   * AnuncioCountOutputType without action
   */
  export type AnuncioCountOutputTypeCountServicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicoWhereInput
  }



  /**
   * Models
   */

  /**
   * Model usuario
   */

  export type AggregateUsuario = {
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  export type UsuarioAvgAggregateOutputType = {
    id: number | null
    access_level: number | null
  }

  export type UsuarioSumAggregateOutputType = {
    id: number | null
    access_level: number | null
  }

  export type UsuarioMinAggregateOutputType = {
    id: number | null
    email: string | null
    name: string | null
    office: string | null
    phone: string | null
    whatsapp: boolean | null
    password: string | null
    access_level: number | null
    main_user: boolean | null
    active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsuarioMaxAggregateOutputType = {
    id: number | null
    email: string | null
    name: string | null
    office: string | null
    phone: string | null
    whatsapp: boolean | null
    password: string | null
    access_level: number | null
    main_user: boolean | null
    active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsuarioCountAggregateOutputType = {
    id: number
    email: number
    name: number
    office: number
    phone: number
    whatsapp: number
    password: number
    access_level: number
    main_user: number
    active: number
    fcm_tokens: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsuarioAvgAggregateInputType = {
    id?: true
    access_level?: true
  }

  export type UsuarioSumAggregateInputType = {
    id?: true
    access_level?: true
  }

  export type UsuarioMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    office?: true
    phone?: true
    whatsapp?: true
    password?: true
    access_level?: true
    main_user?: true
    active?: true
    created_at?: true
    updated_at?: true
  }

  export type UsuarioMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    office?: true
    phone?: true
    whatsapp?: true
    password?: true
    access_level?: true
    main_user?: true
    active?: true
    created_at?: true
    updated_at?: true
  }

  export type UsuarioCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    office?: true
    phone?: true
    whatsapp?: true
    password?: true
    access_level?: true
    main_user?: true
    active?: true
    fcm_tokens?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuario to aggregate.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuarioMaxAggregateInputType
  }

  export type GetUsuarioAggregateType<T extends UsuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuario[P]>
      : GetScalarType<T[P], AggregateUsuario[P]>
  }




  export type usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuarioWhereInput
    orderBy?: usuarioOrderByWithAggregationInput | usuarioOrderByWithAggregationInput[]
    by: UsuarioScalarFieldEnum[] | UsuarioScalarFieldEnum
    having?: usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuarioCountAggregateInputType | true
    _avg?: UsuarioAvgAggregateInputType
    _sum?: UsuarioSumAggregateInputType
    _min?: UsuarioMinAggregateInputType
    _max?: UsuarioMaxAggregateInputType
  }

  export type UsuarioGroupByOutputType = {
    id: number
    email: string
    name: string
    office: string
    phone: string
    whatsapp: boolean
    password: string
    access_level: number
    main_user: boolean
    active: boolean
    fcm_tokens: JsonValue | null
    created_at: Date
    updated_at: Date
    _count: UsuarioCountAggregateOutputType | null
    _avg: UsuarioAvgAggregateOutputType | null
    _sum: UsuarioSumAggregateOutputType | null
    _min: UsuarioMinAggregateOutputType | null
    _max: UsuarioMaxAggregateOutputType | null
  }

  type GetUsuarioGroupByPayload<T extends usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
            : GetScalarType<T[P], UsuarioGroupByOutputType[P]>
        }
      >
    >


  export type usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    office?: boolean
    phone?: boolean
    whatsapp?: boolean
    password?: boolean
    access_level?: boolean
    main_user?: boolean
    active?: boolean
    fcm_tokens?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncio?: boolean | usuario$anuncioArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuario"]>

  export type usuarioSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    office?: boolean
    phone?: boolean
    whatsapp?: boolean
    password?: boolean
    access_level?: boolean
    main_user?: boolean
    active?: boolean
    fcm_tokens?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    anuncio?: boolean | usuario$anuncioArgs<ExtArgs>
    _count?: boolean | UsuarioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuario"
    objects: {
      anuncio: Prisma.$anuncioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      name: string
      office: string
      phone: string
      whatsapp: boolean
      password: string
      access_level: number
      main_user: boolean
      active: boolean
      fcm_tokens: Prisma.JsonValue | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["usuario"]>
    composites: {}
  }


  type usuarioGetPayload<S extends boolean | null | undefined | usuarioDefaultArgs> = $Result.GetResult<Prisma.$usuarioPayload, S>

  type usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usuarioFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: UsuarioCountAggregateInputType | true
    }

  export interface usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuario'], meta: { name: 'usuario' } }
    /**
     * Find zero or one Usuario that matches the filter.
     * @param {usuarioFindUniqueArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usuarioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioFindUniqueArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Usuario that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usuarioFindUniqueOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usuarioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usuarioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioFindFirstArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindFirstOrThrowArgs} args - Arguments to find a Usuario
     * @example
     * // Get one Usuario
     * const usuario = await prisma.usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usuarioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuario.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuarioWithIdOnly = await prisma.usuario.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usuarioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Usuario.
     * @param {usuarioCreateArgs} args - Arguments to create a Usuario.
     * @example
     * // Create one Usuario
     * const Usuario = await prisma.usuario.create({
     *   data: {
     *     // ... data to create a Usuario
     *   }
     * })
     * 
    **/
    create<T extends usuarioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioCreateArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Usuarios.
     *     @param {usuarioCreateManyArgs} args - Arguments to create many Usuarios.
     *     @example
     *     // Create many Usuarios
     *     const usuario = await prisma.usuario.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usuarioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuario.
     * @param {usuarioDeleteArgs} args - Arguments to delete one Usuario.
     * @example
     * // Delete one Usuario
     * const Usuario = await prisma.usuario.delete({
     *   where: {
     *     // ... filter to delete one Usuario
     *   }
     * })
     * 
    **/
    delete<T extends usuarioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioDeleteArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Usuario.
     * @param {usuarioUpdateArgs} args - Arguments to update one Usuario.
     * @example
     * // Update one Usuario
     * const usuario = await prisma.usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usuarioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioUpdateArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {usuarioDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usuarioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usuarioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuario = await prisma.usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usuarioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuario.
     * @param {usuarioUpsertArgs} args - Arguments to update or create a Usuario.
     * @example
     * // Update or create a Usuario
     * const usuario = await prisma.usuario.upsert({
     *   create: {
     *     // ... data to create a Usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuario we want to update
     *   }
     * })
    **/
    upsert<T extends usuarioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usuarioUpsertArgs<ExtArgs>>
    ): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuario.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuarioCountArgs>(
      args?: Subset<T, usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuarioAggregateArgs>(args: Subset<T, UsuarioAggregateArgs>): Prisma.PrismaPromise<GetUsuarioAggregateType<T>>

    /**
     * Group by Usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuarioGroupByArgs['orderBy'] }
        : { orderBy?: usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuario model
   */
  readonly fields: usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    anuncio<T extends usuario$anuncioArgs<ExtArgs> = {}>(args?: Subset<T, usuario$anuncioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the usuario model
   */ 
  interface usuarioFieldRefs {
    readonly id: FieldRef<"usuario", 'Int'>
    readonly email: FieldRef<"usuario", 'String'>
    readonly name: FieldRef<"usuario", 'String'>
    readonly office: FieldRef<"usuario", 'String'>
    readonly phone: FieldRef<"usuario", 'String'>
    readonly whatsapp: FieldRef<"usuario", 'Boolean'>
    readonly password: FieldRef<"usuario", 'String'>
    readonly access_level: FieldRef<"usuario", 'Int'>
    readonly main_user: FieldRef<"usuario", 'Boolean'>
    readonly active: FieldRef<"usuario", 'Boolean'>
    readonly fcm_tokens: FieldRef<"usuario", 'Json'>
    readonly created_at: FieldRef<"usuario", 'DateTime'>
    readonly updated_at: FieldRef<"usuario", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * usuario findUnique
   */
  export type usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }


  /**
   * usuario findUniqueOrThrow
   */
  export type usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where: usuarioWhereUniqueInput
  }


  /**
   * usuario findFirst
   */
  export type usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }


  /**
   * usuario findFirstOrThrow
   */
  export type usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuario to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }


  /**
   * usuario findMany
   */
  export type usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuarioOrderByWithRelationInput | usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuarioScalarFieldEnum | UsuarioScalarFieldEnum[]
  }


  /**
   * usuario create
   */
  export type usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a usuario.
     */
    data: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
  }


  /**
   * usuario createMany
   */
  export type usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuarioCreateManyInput | usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * usuario update
   */
  export type usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a usuario.
     */
    data: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
    /**
     * Choose, which usuario to update.
     */
    where: usuarioWhereUniqueInput
  }


  /**
   * usuario updateMany
   */
  export type usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuarioUpdateManyMutationInput, usuarioUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuarioWhereInput
  }


  /**
   * usuario upsert
   */
  export type usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the usuario to update in case it exists.
     */
    where: usuarioWhereUniqueInput
    /**
     * In case the usuario found by the `where` argument doesn't exist, create a new usuario with this data.
     */
    create: XOR<usuarioCreateInput, usuarioUncheckedCreateInput>
    /**
     * In case the usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuarioUpdateInput, usuarioUncheckedUpdateInput>
  }


  /**
   * usuario delete
   */
  export type usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
    /**
     * Filter which usuario to delete.
     */
    where: usuarioWhereUniqueInput
  }


  /**
   * usuario deleteMany
   */
  export type usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuarioWhereInput
  }


  /**
   * usuario.anuncio
   */
  export type usuario$anuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    where?: anuncioWhereInput
    orderBy?: anuncioOrderByWithRelationInput | anuncioOrderByWithRelationInput[]
    cursor?: anuncioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnuncioScalarFieldEnum | AnuncioScalarFieldEnum[]
  }


  /**
   * usuario without action
   */
  export type usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuario
     */
    select?: usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usuarioInclude<ExtArgs> | null
  }



  /**
   * Model caracteristica
   */

  export type AggregateCaracteristica = {
    _count: CaracteristicaCountAggregateOutputType | null
    _avg: CaracteristicaAvgAggregateOutputType | null
    _sum: CaracteristicaSumAggregateOutputType | null
    _min: CaracteristicaMinAggregateOutputType | null
    _max: CaracteristicaMaxAggregateOutputType | null
  }

  export type CaracteristicaAvgAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type CaracteristicaSumAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type CaracteristicaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type CaracteristicaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type CaracteristicaCountAggregateOutputType = {
    id: number
    nome: number
    status: number
    created_at: number
    updated_at: number
    anuncioId: number
    _all: number
  }


  export type CaracteristicaAvgAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type CaracteristicaSumAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type CaracteristicaMinAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type CaracteristicaMaxAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type CaracteristicaCountAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
    _all?: true
  }

  export type CaracteristicaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caracteristica to aggregate.
     */
    where?: caracteristicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicaOrderByWithRelationInput | caracteristicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: caracteristicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned caracteristicas
    **/
    _count?: true | CaracteristicaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CaracteristicaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CaracteristicaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CaracteristicaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CaracteristicaMaxAggregateInputType
  }

  export type GetCaracteristicaAggregateType<T extends CaracteristicaAggregateArgs> = {
        [P in keyof T & keyof AggregateCaracteristica]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCaracteristica[P]>
      : GetScalarType<T[P], AggregateCaracteristica[P]>
  }




  export type caracteristicaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: caracteristicaWhereInput
    orderBy?: caracteristicaOrderByWithAggregationInput | caracteristicaOrderByWithAggregationInput[]
    by: CaracteristicaScalarFieldEnum[] | CaracteristicaScalarFieldEnum
    having?: caracteristicaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CaracteristicaCountAggregateInputType | true
    _avg?: CaracteristicaAvgAggregateInputType
    _sum?: CaracteristicaSumAggregateInputType
    _min?: CaracteristicaMinAggregateInputType
    _max?: CaracteristicaMaxAggregateInputType
  }

  export type CaracteristicaGroupByOutputType = {
    id: number
    nome: string
    status: boolean
    created_at: Date
    updated_at: Date
    anuncioId: number | null
    _count: CaracteristicaCountAggregateOutputType | null
    _avg: CaracteristicaAvgAggregateOutputType | null
    _sum: CaracteristicaSumAggregateOutputType | null
    _min: CaracteristicaMinAggregateOutputType | null
    _max: CaracteristicaMaxAggregateOutputType | null
  }

  type GetCaracteristicaGroupByPayload<T extends caracteristicaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CaracteristicaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CaracteristicaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CaracteristicaGroupByOutputType[P]>
            : GetScalarType<T[P], CaracteristicaGroupByOutputType[P]>
        }
      >
    >


  export type caracteristicaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
    anuncio?: boolean | caracteristica$anuncioArgs<ExtArgs>
  }, ExtArgs["result"]["caracteristica"]>

  export type caracteristicaSelectScalar = {
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
  }

  export type caracteristicaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    anuncio?: boolean | caracteristica$anuncioArgs<ExtArgs>
  }


  export type $caracteristicaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "caracteristica"
    objects: {
      anuncio: Prisma.$anuncioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      status: boolean
      created_at: Date
      updated_at: Date
      anuncioId: number | null
    }, ExtArgs["result"]["caracteristica"]>
    composites: {}
  }


  type caracteristicaGetPayload<S extends boolean | null | undefined | caracteristicaDefaultArgs> = $Result.GetResult<Prisma.$caracteristicaPayload, S>

  type caracteristicaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<caracteristicaFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: CaracteristicaCountAggregateInputType | true
    }

  export interface caracteristicaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['caracteristica'], meta: { name: 'caracteristica' } }
    /**
     * Find zero or one Caracteristica that matches the filter.
     * @param {caracteristicaFindUniqueArgs} args - Arguments to find a Caracteristica
     * @example
     * // Get one Caracteristica
     * const caracteristica = await prisma.caracteristica.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends caracteristicaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaFindUniqueArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Caracteristica that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {caracteristicaFindUniqueOrThrowArgs} args - Arguments to find a Caracteristica
     * @example
     * // Get one Caracteristica
     * const caracteristica = await prisma.caracteristica.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends caracteristicaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Caracteristica that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaFindFirstArgs} args - Arguments to find a Caracteristica
     * @example
     * // Get one Caracteristica
     * const caracteristica = await prisma.caracteristica.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends caracteristicaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaFindFirstArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Caracteristica that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaFindFirstOrThrowArgs} args - Arguments to find a Caracteristica
     * @example
     * // Get one Caracteristica
     * const caracteristica = await prisma.caracteristica.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends caracteristicaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Caracteristicas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Caracteristicas
     * const caracteristicas = await prisma.caracteristica.findMany()
     * 
     * // Get first 10 Caracteristicas
     * const caracteristicas = await prisma.caracteristica.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const caracteristicaWithIdOnly = await prisma.caracteristica.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends caracteristicaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Caracteristica.
     * @param {caracteristicaCreateArgs} args - Arguments to create a Caracteristica.
     * @example
     * // Create one Caracteristica
     * const Caracteristica = await prisma.caracteristica.create({
     *   data: {
     *     // ... data to create a Caracteristica
     *   }
     * })
     * 
    **/
    create<T extends caracteristicaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaCreateArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Caracteristicas.
     *     @param {caracteristicaCreateManyArgs} args - Arguments to create many Caracteristicas.
     *     @example
     *     // Create many Caracteristicas
     *     const caracteristica = await prisma.caracteristica.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends caracteristicaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Caracteristica.
     * @param {caracteristicaDeleteArgs} args - Arguments to delete one Caracteristica.
     * @example
     * // Delete one Caracteristica
     * const Caracteristica = await prisma.caracteristica.delete({
     *   where: {
     *     // ... filter to delete one Caracteristica
     *   }
     * })
     * 
    **/
    delete<T extends caracteristicaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaDeleteArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Caracteristica.
     * @param {caracteristicaUpdateArgs} args - Arguments to update one Caracteristica.
     * @example
     * // Update one Caracteristica
     * const caracteristica = await prisma.caracteristica.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends caracteristicaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaUpdateArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Caracteristicas.
     * @param {caracteristicaDeleteManyArgs} args - Arguments to filter Caracteristicas to delete.
     * @example
     * // Delete a few Caracteristicas
     * const { count } = await prisma.caracteristica.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends caracteristicaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, caracteristicaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Caracteristicas
     * const caracteristica = await prisma.caracteristica.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends caracteristicaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Caracteristica.
     * @param {caracteristicaUpsertArgs} args - Arguments to update or create a Caracteristica.
     * @example
     * // Update or create a Caracteristica
     * const caracteristica = await prisma.caracteristica.upsert({
     *   create: {
     *     // ... data to create a Caracteristica
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Caracteristica we want to update
     *   }
     * })
    **/
    upsert<T extends caracteristicaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, caracteristicaUpsertArgs<ExtArgs>>
    ): Prisma__caracteristicaClient<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Caracteristicas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaCountArgs} args - Arguments to filter Caracteristicas to count.
     * @example
     * // Count the number of Caracteristicas
     * const count = await prisma.caracteristica.count({
     *   where: {
     *     // ... the filter for the Caracteristicas we want to count
     *   }
     * })
    **/
    count<T extends caracteristicaCountArgs>(
      args?: Subset<T, caracteristicaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CaracteristicaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Caracteristica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CaracteristicaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CaracteristicaAggregateArgs>(args: Subset<T, CaracteristicaAggregateArgs>): Prisma.PrismaPromise<GetCaracteristicaAggregateType<T>>

    /**
     * Group by Caracteristica.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {caracteristicaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends caracteristicaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: caracteristicaGroupByArgs['orderBy'] }
        : { orderBy?: caracteristicaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, caracteristicaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCaracteristicaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the caracteristica model
   */
  readonly fields: caracteristicaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for caracteristica.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__caracteristicaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    anuncio<T extends caracteristica$anuncioArgs<ExtArgs> = {}>(args?: Subset<T, caracteristica$anuncioArgs<ExtArgs>>): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the caracteristica model
   */ 
  interface caracteristicaFieldRefs {
    readonly id: FieldRef<"caracteristica", 'Int'>
    readonly nome: FieldRef<"caracteristica", 'String'>
    readonly status: FieldRef<"caracteristica", 'Boolean'>
    readonly created_at: FieldRef<"caracteristica", 'DateTime'>
    readonly updated_at: FieldRef<"caracteristica", 'DateTime'>
    readonly anuncioId: FieldRef<"caracteristica", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * caracteristica findUnique
   */
  export type caracteristicaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter, which caracteristica to fetch.
     */
    where: caracteristicaWhereUniqueInput
  }


  /**
   * caracteristica findUniqueOrThrow
   */
  export type caracteristicaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter, which caracteristica to fetch.
     */
    where: caracteristicaWhereUniqueInput
  }


  /**
   * caracteristica findFirst
   */
  export type caracteristicaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter, which caracteristica to fetch.
     */
    where?: caracteristicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicaOrderByWithRelationInput | caracteristicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caracteristicas.
     */
    cursor?: caracteristicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caracteristicas.
     */
    distinct?: CaracteristicaScalarFieldEnum | CaracteristicaScalarFieldEnum[]
  }


  /**
   * caracteristica findFirstOrThrow
   */
  export type caracteristicaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter, which caracteristica to fetch.
     */
    where?: caracteristicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicaOrderByWithRelationInput | caracteristicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for caracteristicas.
     */
    cursor?: caracteristicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of caracteristicas.
     */
    distinct?: CaracteristicaScalarFieldEnum | CaracteristicaScalarFieldEnum[]
  }


  /**
   * caracteristica findMany
   */
  export type caracteristicaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter, which caracteristicas to fetch.
     */
    where?: caracteristicaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of caracteristicas to fetch.
     */
    orderBy?: caracteristicaOrderByWithRelationInput | caracteristicaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing caracteristicas.
     */
    cursor?: caracteristicaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` caracteristicas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` caracteristicas.
     */
    skip?: number
    distinct?: CaracteristicaScalarFieldEnum | CaracteristicaScalarFieldEnum[]
  }


  /**
   * caracteristica create
   */
  export type caracteristicaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * The data needed to create a caracteristica.
     */
    data: XOR<caracteristicaCreateInput, caracteristicaUncheckedCreateInput>
  }


  /**
   * caracteristica createMany
   */
  export type caracteristicaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many caracteristicas.
     */
    data: caracteristicaCreateManyInput | caracteristicaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * caracteristica update
   */
  export type caracteristicaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * The data needed to update a caracteristica.
     */
    data: XOR<caracteristicaUpdateInput, caracteristicaUncheckedUpdateInput>
    /**
     * Choose, which caracteristica to update.
     */
    where: caracteristicaWhereUniqueInput
  }


  /**
   * caracteristica updateMany
   */
  export type caracteristicaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update caracteristicas.
     */
    data: XOR<caracteristicaUpdateManyMutationInput, caracteristicaUncheckedUpdateManyInput>
    /**
     * Filter which caracteristicas to update
     */
    where?: caracteristicaWhereInput
  }


  /**
   * caracteristica upsert
   */
  export type caracteristicaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * The filter to search for the caracteristica to update in case it exists.
     */
    where: caracteristicaWhereUniqueInput
    /**
     * In case the caracteristica found by the `where` argument doesn't exist, create a new caracteristica with this data.
     */
    create: XOR<caracteristicaCreateInput, caracteristicaUncheckedCreateInput>
    /**
     * In case the caracteristica was found with the provided `where` argument, update it with this data.
     */
    update: XOR<caracteristicaUpdateInput, caracteristicaUncheckedUpdateInput>
  }


  /**
   * caracteristica delete
   */
  export type caracteristicaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    /**
     * Filter which caracteristica to delete.
     */
    where: caracteristicaWhereUniqueInput
  }


  /**
   * caracteristica deleteMany
   */
  export type caracteristicaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which caracteristicas to delete
     */
    where?: caracteristicaWhereInput
  }


  /**
   * caracteristica.anuncio
   */
  export type caracteristica$anuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    where?: anuncioWhereInput
  }


  /**
   * caracteristica without action
   */
  export type caracteristicaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
  }



  /**
   * Model servico
   */

  export type AggregateServico = {
    _count: ServicoCountAggregateOutputType | null
    _avg: ServicoAvgAggregateOutputType | null
    _sum: ServicoSumAggregateOutputType | null
    _min: ServicoMinAggregateOutputType | null
    _max: ServicoMaxAggregateOutputType | null
  }

  export type ServicoAvgAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type ServicoSumAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type ServicoMinAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type ServicoMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type ServicoCountAggregateOutputType = {
    id: number
    nome: number
    status: number
    created_at: number
    updated_at: number
    anuncioId: number
    _all: number
  }


  export type ServicoAvgAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type ServicoSumAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type ServicoMinAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type ServicoMaxAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type ServicoCountAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
    _all?: true
  }

  export type ServicoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servico to aggregate.
     */
    where?: servicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicos to fetch.
     */
    orderBy?: servicoOrderByWithRelationInput | servicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: servicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned servicos
    **/
    _count?: true | ServicoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServicoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServicoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServicoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServicoMaxAggregateInputType
  }

  export type GetServicoAggregateType<T extends ServicoAggregateArgs> = {
        [P in keyof T & keyof AggregateServico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServico[P]>
      : GetScalarType<T[P], AggregateServico[P]>
  }




  export type servicoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicoWhereInput
    orderBy?: servicoOrderByWithAggregationInput | servicoOrderByWithAggregationInput[]
    by: ServicoScalarFieldEnum[] | ServicoScalarFieldEnum
    having?: servicoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServicoCountAggregateInputType | true
    _avg?: ServicoAvgAggregateInputType
    _sum?: ServicoSumAggregateInputType
    _min?: ServicoMinAggregateInputType
    _max?: ServicoMaxAggregateInputType
  }

  export type ServicoGroupByOutputType = {
    id: number
    nome: string
    status: boolean
    created_at: Date
    updated_at: Date
    anuncioId: number | null
    _count: ServicoCountAggregateOutputType | null
    _avg: ServicoAvgAggregateOutputType | null
    _sum: ServicoSumAggregateOutputType | null
    _min: ServicoMinAggregateOutputType | null
    _max: ServicoMaxAggregateOutputType | null
  }

  type GetServicoGroupByPayload<T extends servicoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServicoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServicoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServicoGroupByOutputType[P]>
            : GetScalarType<T[P], ServicoGroupByOutputType[P]>
        }
      >
    >


  export type servicoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
    anuncio?: boolean | servico$anuncioArgs<ExtArgs>
  }, ExtArgs["result"]["servico"]>

  export type servicoSelectScalar = {
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
  }

  export type servicoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    anuncio?: boolean | servico$anuncioArgs<ExtArgs>
  }


  export type $servicoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "servico"
    objects: {
      anuncio: Prisma.$anuncioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      status: boolean
      created_at: Date
      updated_at: Date
      anuncioId: number | null
    }, ExtArgs["result"]["servico"]>
    composites: {}
  }


  type servicoGetPayload<S extends boolean | null | undefined | servicoDefaultArgs> = $Result.GetResult<Prisma.$servicoPayload, S>

  type servicoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<servicoFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: ServicoCountAggregateInputType | true
    }

  export interface servicoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['servico'], meta: { name: 'servico' } }
    /**
     * Find zero or one Servico that matches the filter.
     * @param {servicoFindUniqueArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends servicoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, servicoFindUniqueArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Servico that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {servicoFindUniqueOrThrowArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends servicoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Servico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoFindFirstArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends servicoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoFindFirstArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Servico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoFindFirstOrThrowArgs} args - Arguments to find a Servico
     * @example
     * // Get one Servico
     * const servico = await prisma.servico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends servicoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Servicos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Servicos
     * const servicos = await prisma.servico.findMany()
     * 
     * // Get first 10 Servicos
     * const servicos = await prisma.servico.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const servicoWithIdOnly = await prisma.servico.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends servicoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Servico.
     * @param {servicoCreateArgs} args - Arguments to create a Servico.
     * @example
     * // Create one Servico
     * const Servico = await prisma.servico.create({
     *   data: {
     *     // ... data to create a Servico
     *   }
     * })
     * 
    **/
    create<T extends servicoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, servicoCreateArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Servicos.
     *     @param {servicoCreateManyArgs} args - Arguments to create many Servicos.
     *     @example
     *     // Create many Servicos
     *     const servico = await prisma.servico.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends servicoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Servico.
     * @param {servicoDeleteArgs} args - Arguments to delete one Servico.
     * @example
     * // Delete one Servico
     * const Servico = await prisma.servico.delete({
     *   where: {
     *     // ... filter to delete one Servico
     *   }
     * })
     * 
    **/
    delete<T extends servicoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, servicoDeleteArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Servico.
     * @param {servicoUpdateArgs} args - Arguments to update one Servico.
     * @example
     * // Update one Servico
     * const servico = await prisma.servico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends servicoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, servicoUpdateArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Servicos.
     * @param {servicoDeleteManyArgs} args - Arguments to filter Servicos to delete.
     * @example
     * // Delete a few Servicos
     * const { count } = await prisma.servico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends servicoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, servicoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Servicos
     * const servico = await prisma.servico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends servicoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, servicoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Servico.
     * @param {servicoUpsertArgs} args - Arguments to update or create a Servico.
     * @example
     * // Update or create a Servico
     * const servico = await prisma.servico.upsert({
     *   create: {
     *     // ... data to create a Servico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Servico we want to update
     *   }
     * })
    **/
    upsert<T extends servicoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, servicoUpsertArgs<ExtArgs>>
    ): Prisma__servicoClient<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Servicos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoCountArgs} args - Arguments to filter Servicos to count.
     * @example
     * // Count the number of Servicos
     * const count = await prisma.servico.count({
     *   where: {
     *     // ... the filter for the Servicos we want to count
     *   }
     * })
    **/
    count<T extends servicoCountArgs>(
      args?: Subset<T, servicoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServicoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Servico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServicoAggregateArgs>(args: Subset<T, ServicoAggregateArgs>): Prisma.PrismaPromise<GetServicoAggregateType<T>>

    /**
     * Group by Servico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends servicoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: servicoGroupByArgs['orderBy'] }
        : { orderBy?: servicoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, servicoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the servico model
   */
  readonly fields: servicoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for servico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__servicoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    anuncio<T extends servico$anuncioArgs<ExtArgs> = {}>(args?: Subset<T, servico$anuncioArgs<ExtArgs>>): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the servico model
   */ 
  interface servicoFieldRefs {
    readonly id: FieldRef<"servico", 'Int'>
    readonly nome: FieldRef<"servico", 'String'>
    readonly status: FieldRef<"servico", 'Boolean'>
    readonly created_at: FieldRef<"servico", 'DateTime'>
    readonly updated_at: FieldRef<"servico", 'DateTime'>
    readonly anuncioId: FieldRef<"servico", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * servico findUnique
   */
  export type servicoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter, which servico to fetch.
     */
    where: servicoWhereUniqueInput
  }


  /**
   * servico findUniqueOrThrow
   */
  export type servicoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter, which servico to fetch.
     */
    where: servicoWhereUniqueInput
  }


  /**
   * servico findFirst
   */
  export type servicoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter, which servico to fetch.
     */
    where?: servicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicos to fetch.
     */
    orderBy?: servicoOrderByWithRelationInput | servicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicos.
     */
    cursor?: servicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicos.
     */
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }


  /**
   * servico findFirstOrThrow
   */
  export type servicoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter, which servico to fetch.
     */
    where?: servicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicos to fetch.
     */
    orderBy?: servicoOrderByWithRelationInput | servicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for servicos.
     */
    cursor?: servicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of servicos.
     */
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }


  /**
   * servico findMany
   */
  export type servicoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter, which servicos to fetch.
     */
    where?: servicoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of servicos to fetch.
     */
    orderBy?: servicoOrderByWithRelationInput | servicoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing servicos.
     */
    cursor?: servicoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` servicos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` servicos.
     */
    skip?: number
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }


  /**
   * servico create
   */
  export type servicoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * The data needed to create a servico.
     */
    data: XOR<servicoCreateInput, servicoUncheckedCreateInput>
  }


  /**
   * servico createMany
   */
  export type servicoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many servicos.
     */
    data: servicoCreateManyInput | servicoCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * servico update
   */
  export type servicoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * The data needed to update a servico.
     */
    data: XOR<servicoUpdateInput, servicoUncheckedUpdateInput>
    /**
     * Choose, which servico to update.
     */
    where: servicoWhereUniqueInput
  }


  /**
   * servico updateMany
   */
  export type servicoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update servicos.
     */
    data: XOR<servicoUpdateManyMutationInput, servicoUncheckedUpdateManyInput>
    /**
     * Filter which servicos to update
     */
    where?: servicoWhereInput
  }


  /**
   * servico upsert
   */
  export type servicoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * The filter to search for the servico to update in case it exists.
     */
    where: servicoWhereUniqueInput
    /**
     * In case the servico found by the `where` argument doesn't exist, create a new servico with this data.
     */
    create: XOR<servicoCreateInput, servicoUncheckedCreateInput>
    /**
     * In case the servico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<servicoUpdateInput, servicoUncheckedUpdateInput>
  }


  /**
   * servico delete
   */
  export type servicoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    /**
     * Filter which servico to delete.
     */
    where: servicoWhereUniqueInput
  }


  /**
   * servico deleteMany
   */
  export type servicoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which servicos to delete
     */
    where?: servicoWhereInput
  }


  /**
   * servico.anuncio
   */
  export type servico$anuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    where?: anuncioWhereInput
  }


  /**
   * servico without action
   */
  export type servicoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
  }



  /**
   * Model categoria
   */

  export type AggregateCategoria = {
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  export type CategoriaAvgAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type CategoriaSumAggregateOutputType = {
    id: number | null
    anuncioId: number | null
  }

  export type CategoriaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type CategoriaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    anuncioId: number | null
  }

  export type CategoriaCountAggregateOutputType = {
    id: number
    nome: number
    status: number
    created_at: number
    updated_at: number
    anuncioId: number
    _all: number
  }


  export type CategoriaAvgAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type CategoriaSumAggregateInputType = {
    id?: true
    anuncioId?: true
  }

  export type CategoriaMinAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type CategoriaMaxAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
  }

  export type CategoriaCountAggregateInputType = {
    id?: true
    nome?: true
    status?: true
    created_at?: true
    updated_at?: true
    anuncioId?: true
    _all?: true
  }

  export type CategoriaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria to aggregate.
     */
    where?: categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriaOrderByWithRelationInput | categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categorias
    **/
    _count?: true | CategoriaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriaMaxAggregateInputType
  }

  export type GetCategoriaAggregateType<T extends CategoriaAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria[P]>
      : GetScalarType<T[P], AggregateCategoria[P]>
  }




  export type categoriaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriaWhereInput
    orderBy?: categoriaOrderByWithAggregationInput | categoriaOrderByWithAggregationInput[]
    by: CategoriaScalarFieldEnum[] | CategoriaScalarFieldEnum
    having?: categoriaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriaCountAggregateInputType | true
    _avg?: CategoriaAvgAggregateInputType
    _sum?: CategoriaSumAggregateInputType
    _min?: CategoriaMinAggregateInputType
    _max?: CategoriaMaxAggregateInputType
  }

  export type CategoriaGroupByOutputType = {
    id: number
    nome: string
    status: boolean
    created_at: Date
    updated_at: Date
    anuncioId: number | null
    _count: CategoriaCountAggregateOutputType | null
    _avg: CategoriaAvgAggregateOutputType | null
    _sum: CategoriaSumAggregateOutputType | null
    _min: CategoriaMinAggregateOutputType | null
    _max: CategoriaMaxAggregateOutputType | null
  }

  type GetCategoriaGroupByPayload<T extends categoriaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriaGroupByOutputType[P]>
        }
      >
    >


  export type categoriaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
    anuncio?: boolean | categoria$anuncioArgs<ExtArgs>
  }, ExtArgs["result"]["categoria"]>

  export type categoriaSelectScalar = {
    id?: boolean
    nome?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    anuncioId?: boolean
  }

  export type categoriaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    anuncio?: boolean | categoria$anuncioArgs<ExtArgs>
  }


  export type $categoriaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categoria"
    objects: {
      anuncio: Prisma.$anuncioPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      status: boolean
      created_at: Date
      updated_at: Date
      anuncioId: number | null
    }, ExtArgs["result"]["categoria"]>
    composites: {}
  }


  type categoriaGetPayload<S extends boolean | null | undefined | categoriaDefaultArgs> = $Result.GetResult<Prisma.$categoriaPayload, S>

  type categoriaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<categoriaFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: CategoriaCountAggregateInputType | true
    }

  export interface categoriaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categoria'], meta: { name: 'categoria' } }
    /**
     * Find zero or one Categoria that matches the filter.
     * @param {categoriaFindUniqueArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends categoriaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaFindUniqueArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Categoria that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {categoriaFindUniqueOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends categoriaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Categoria that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaFindFirstArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends categoriaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaFindFirstArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Categoria that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaFindFirstOrThrowArgs} args - Arguments to find a Categoria
     * @example
     * // Get one Categoria
     * const categoria = await prisma.categoria.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends categoriaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categorias
     * const categorias = await prisma.categoria.findMany()
     * 
     * // Get first 10 Categorias
     * const categorias = await prisma.categoria.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriaWithIdOnly = await prisma.categoria.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends categoriaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Categoria.
     * @param {categoriaCreateArgs} args - Arguments to create a Categoria.
     * @example
     * // Create one Categoria
     * const Categoria = await prisma.categoria.create({
     *   data: {
     *     // ... data to create a Categoria
     *   }
     * })
     * 
    **/
    create<T extends categoriaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaCreateArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Categorias.
     *     @param {categoriaCreateManyArgs} args - Arguments to create many Categorias.
     *     @example
     *     // Create many Categorias
     *     const categoria = await prisma.categoria.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends categoriaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoria.
     * @param {categoriaDeleteArgs} args - Arguments to delete one Categoria.
     * @example
     * // Delete one Categoria
     * const Categoria = await prisma.categoria.delete({
     *   where: {
     *     // ... filter to delete one Categoria
     *   }
     * })
     * 
    **/
    delete<T extends categoriaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaDeleteArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Categoria.
     * @param {categoriaUpdateArgs} args - Arguments to update one Categoria.
     * @example
     * // Update one Categoria
     * const categoria = await prisma.categoria.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends categoriaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaUpdateArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Categorias.
     * @param {categoriaDeleteManyArgs} args - Arguments to filter Categorias to delete.
     * @example
     * // Delete a few Categorias
     * const { count } = await prisma.categoria.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends categoriaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoriaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categorias
     * const categoria = await prisma.categoria.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends categoriaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoria.
     * @param {categoriaUpsertArgs} args - Arguments to update or create a Categoria.
     * @example
     * // Update or create a Categoria
     * const categoria = await prisma.categoria.upsert({
     *   create: {
     *     // ... data to create a Categoria
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria we want to update
     *   }
     * })
    **/
    upsert<T extends categoriaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, categoriaUpsertArgs<ExtArgs>>
    ): Prisma__categoriaClient<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaCountArgs} args - Arguments to filter Categorias to count.
     * @example
     * // Count the number of Categorias
     * const count = await prisma.categoria.count({
     *   where: {
     *     // ... the filter for the Categorias we want to count
     *   }
     * })
    **/
    count<T extends categoriaCountArgs>(
      args?: Subset<T, categoriaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriaAggregateArgs>(args: Subset<T, CategoriaAggregateArgs>): Prisma.PrismaPromise<GetCategoriaAggregateType<T>>

    /**
     * Group by Categoria.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriaGroupByArgs['orderBy'] }
        : { orderBy?: categoriaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categoria model
   */
  readonly fields: categoriaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categoria.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    anuncio<T extends categoria$anuncioArgs<ExtArgs> = {}>(args?: Subset<T, categoria$anuncioArgs<ExtArgs>>): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the categoria model
   */ 
  interface categoriaFieldRefs {
    readonly id: FieldRef<"categoria", 'Int'>
    readonly nome: FieldRef<"categoria", 'String'>
    readonly status: FieldRef<"categoria", 'Boolean'>
    readonly created_at: FieldRef<"categoria", 'DateTime'>
    readonly updated_at: FieldRef<"categoria", 'DateTime'>
    readonly anuncioId: FieldRef<"categoria", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * categoria findUnique
   */
  export type categoriaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter, which categoria to fetch.
     */
    where: categoriaWhereUniqueInput
  }


  /**
   * categoria findUniqueOrThrow
   */
  export type categoriaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter, which categoria to fetch.
     */
    where: categoriaWhereUniqueInput
  }


  /**
   * categoria findFirst
   */
  export type categoriaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter, which categoria to fetch.
     */
    where?: categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriaOrderByWithRelationInput | categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }


  /**
   * categoria findFirstOrThrow
   */
  export type categoriaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter, which categoria to fetch.
     */
    where?: categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriaOrderByWithRelationInput | categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categorias.
     */
    cursor?: categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categorias.
     */
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }


  /**
   * categoria findMany
   */
  export type categoriaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter, which categorias to fetch.
     */
    where?: categoriaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categorias to fetch.
     */
    orderBy?: categoriaOrderByWithRelationInput | categoriaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categorias.
     */
    cursor?: categoriaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categorias.
     */
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }


  /**
   * categoria create
   */
  export type categoriaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * The data needed to create a categoria.
     */
    data: XOR<categoriaCreateInput, categoriaUncheckedCreateInput>
  }


  /**
   * categoria createMany
   */
  export type categoriaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categorias.
     */
    data: categoriaCreateManyInput | categoriaCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * categoria update
   */
  export type categoriaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * The data needed to update a categoria.
     */
    data: XOR<categoriaUpdateInput, categoriaUncheckedUpdateInput>
    /**
     * Choose, which categoria to update.
     */
    where: categoriaWhereUniqueInput
  }


  /**
   * categoria updateMany
   */
  export type categoriaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categorias.
     */
    data: XOR<categoriaUpdateManyMutationInput, categoriaUncheckedUpdateManyInput>
    /**
     * Filter which categorias to update
     */
    where?: categoriaWhereInput
  }


  /**
   * categoria upsert
   */
  export type categoriaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * The filter to search for the categoria to update in case it exists.
     */
    where: categoriaWhereUniqueInput
    /**
     * In case the categoria found by the `where` argument doesn't exist, create a new categoria with this data.
     */
    create: XOR<categoriaCreateInput, categoriaUncheckedCreateInput>
    /**
     * In case the categoria was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriaUpdateInput, categoriaUncheckedUpdateInput>
  }


  /**
   * categoria delete
   */
  export type categoriaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    /**
     * Filter which categoria to delete.
     */
    where: categoriaWhereUniqueInput
  }


  /**
   * categoria deleteMany
   */
  export type categoriaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categorias to delete
     */
    where?: categoriaWhereInput
  }


  /**
   * categoria.anuncio
   */
  export type categoria$anuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    where?: anuncioWhereInput
  }


  /**
   * categoria without action
   */
  export type categoriaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
  }



  /**
   * Model anuncio
   */

  export type AggregateAnuncio = {
    _count: AnuncioCountAggregateOutputType | null
    _avg: AnuncioAvgAggregateOutputType | null
    _sum: AnuncioSumAggregateOutputType | null
    _min: AnuncioMinAggregateOutputType | null
    _max: AnuncioMaxAggregateOutputType | null
  }

  export type AnuncioAvgAggregateOutputType = {
    id: number | null
    cidade_id: number | null
    estado_id: number | null
    usuario_id: number | null
  }

  export type AnuncioSumAggregateOutputType = {
    id: number | null
    cidade_id: number | null
    estado_id: number | null
    usuario_id: number | null
  }

  export type AnuncioMinAggregateOutputType = {
    id: number | null
    identificador: string | null
    titulo: string | null
    data_fim: Date | null
    status: boolean | null
    descricao: string | null
    caminho_pasta: string | null
    cidade_id: number | null
    estado_id: number | null
    created_at: Date | null
    updated_at: Date | null
    usuario_id: number | null
  }

  export type AnuncioMaxAggregateOutputType = {
    id: number | null
    identificador: string | null
    titulo: string | null
    data_fim: Date | null
    status: boolean | null
    descricao: string | null
    caminho_pasta: string | null
    cidade_id: number | null
    estado_id: number | null
    created_at: Date | null
    updated_at: Date | null
    usuario_id: number | null
  }

  export type AnuncioCountAggregateOutputType = {
    id: number
    identificador: number
    titulo: number
    data_fim: number
    status: number
    descricao: number
    caminho_pasta: number
    cidade_id: number
    estado_id: number
    created_at: number
    updated_at: number
    usuario_id: number
    _all: number
  }


  export type AnuncioAvgAggregateInputType = {
    id?: true
    cidade_id?: true
    estado_id?: true
    usuario_id?: true
  }

  export type AnuncioSumAggregateInputType = {
    id?: true
    cidade_id?: true
    estado_id?: true
    usuario_id?: true
  }

  export type AnuncioMinAggregateInputType = {
    id?: true
    identificador?: true
    titulo?: true
    data_fim?: true
    status?: true
    descricao?: true
    caminho_pasta?: true
    cidade_id?: true
    estado_id?: true
    created_at?: true
    updated_at?: true
    usuario_id?: true
  }

  export type AnuncioMaxAggregateInputType = {
    id?: true
    identificador?: true
    titulo?: true
    data_fim?: true
    status?: true
    descricao?: true
    caminho_pasta?: true
    cidade_id?: true
    estado_id?: true
    created_at?: true
    updated_at?: true
    usuario_id?: true
  }

  export type AnuncioCountAggregateInputType = {
    id?: true
    identificador?: true
    titulo?: true
    data_fim?: true
    status?: true
    descricao?: true
    caminho_pasta?: true
    cidade_id?: true
    estado_id?: true
    created_at?: true
    updated_at?: true
    usuario_id?: true
    _all?: true
  }

  export type AnuncioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which anuncio to aggregate.
     */
    where?: anuncioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of anuncios to fetch.
     */
    orderBy?: anuncioOrderByWithRelationInput | anuncioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: anuncioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` anuncios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` anuncios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned anuncios
    **/
    _count?: true | AnuncioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnuncioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnuncioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnuncioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnuncioMaxAggregateInputType
  }

  export type GetAnuncioAggregateType<T extends AnuncioAggregateArgs> = {
        [P in keyof T & keyof AggregateAnuncio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnuncio[P]>
      : GetScalarType<T[P], AggregateAnuncio[P]>
  }




  export type anuncioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: anuncioWhereInput
    orderBy?: anuncioOrderByWithAggregationInput | anuncioOrderByWithAggregationInput[]
    by: AnuncioScalarFieldEnum[] | AnuncioScalarFieldEnum
    having?: anuncioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnuncioCountAggregateInputType | true
    _avg?: AnuncioAvgAggregateInputType
    _sum?: AnuncioSumAggregateInputType
    _min?: AnuncioMinAggregateInputType
    _max?: AnuncioMaxAggregateInputType
  }

  export type AnuncioGroupByOutputType = {
    id: number
    identificador: string
    titulo: string
    data_fim: Date
    status: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at: Date
    updated_at: Date
    usuario_id: number
    _count: AnuncioCountAggregateOutputType | null
    _avg: AnuncioAvgAggregateOutputType | null
    _sum: AnuncioSumAggregateOutputType | null
    _min: AnuncioMinAggregateOutputType | null
    _max: AnuncioMaxAggregateOutputType | null
  }

  type GetAnuncioGroupByPayload<T extends anuncioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnuncioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnuncioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnuncioGroupByOutputType[P]>
            : GetScalarType<T[P], AnuncioGroupByOutputType[P]>
        }
      >
    >


  export type anuncioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identificador?: boolean
    titulo?: boolean
    data_fim?: boolean
    status?: boolean
    descricao?: boolean
    caminho_pasta?: boolean
    cidade_id?: boolean
    estado_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuario_id?: boolean
    caracteristicas?: boolean | anuncio$caracteristicasArgs<ExtArgs>
    categorias?: boolean | anuncio$categoriasArgs<ExtArgs>
    servicos?: boolean | anuncio$servicosArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    _count?: boolean | AnuncioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["anuncio"]>

  export type anuncioSelectScalar = {
    id?: boolean
    identificador?: boolean
    titulo?: boolean
    data_fim?: boolean
    status?: boolean
    descricao?: boolean
    caminho_pasta?: boolean
    cidade_id?: boolean
    estado_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    usuario_id?: boolean
  }

  export type anuncioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    caracteristicas?: boolean | anuncio$caracteristicasArgs<ExtArgs>
    categorias?: boolean | anuncio$categoriasArgs<ExtArgs>
    servicos?: boolean | anuncio$servicosArgs<ExtArgs>
    usuario?: boolean | usuarioDefaultArgs<ExtArgs>
    _count?: boolean | AnuncioCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $anuncioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "anuncio"
    objects: {
      caracteristicas: Prisma.$caracteristicaPayload<ExtArgs>[]
      categorias: Prisma.$categoriaPayload<ExtArgs>[]
      servicos: Prisma.$servicoPayload<ExtArgs>[]
      usuario: Prisma.$usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      identificador: string
      titulo: string
      data_fim: Date
      status: boolean
      descricao: string
      caminho_pasta: string
      cidade_id: number
      estado_id: number
      created_at: Date
      updated_at: Date
      usuario_id: number
    }, ExtArgs["result"]["anuncio"]>
    composites: {}
  }


  type anuncioGetPayload<S extends boolean | null | undefined | anuncioDefaultArgs> = $Result.GetResult<Prisma.$anuncioPayload, S>

  type anuncioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<anuncioFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: AnuncioCountAggregateInputType | true
    }

  export interface anuncioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['anuncio'], meta: { name: 'anuncio' } }
    /**
     * Find zero or one Anuncio that matches the filter.
     * @param {anuncioFindUniqueArgs} args - Arguments to find a Anuncio
     * @example
     * // Get one Anuncio
     * const anuncio = await prisma.anuncio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends anuncioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioFindUniqueArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Anuncio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {anuncioFindUniqueOrThrowArgs} args - Arguments to find a Anuncio
     * @example
     * // Get one Anuncio
     * const anuncio = await prisma.anuncio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends anuncioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Anuncio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioFindFirstArgs} args - Arguments to find a Anuncio
     * @example
     * // Get one Anuncio
     * const anuncio = await prisma.anuncio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends anuncioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioFindFirstArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Anuncio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioFindFirstOrThrowArgs} args - Arguments to find a Anuncio
     * @example
     * // Get one Anuncio
     * const anuncio = await prisma.anuncio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends anuncioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Anuncios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Anuncios
     * const anuncios = await prisma.anuncio.findMany()
     * 
     * // Get first 10 Anuncios
     * const anuncios = await prisma.anuncio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const anuncioWithIdOnly = await prisma.anuncio.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends anuncioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Anuncio.
     * @param {anuncioCreateArgs} args - Arguments to create a Anuncio.
     * @example
     * // Create one Anuncio
     * const Anuncio = await prisma.anuncio.create({
     *   data: {
     *     // ... data to create a Anuncio
     *   }
     * })
     * 
    **/
    create<T extends anuncioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioCreateArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Anuncios.
     *     @param {anuncioCreateManyArgs} args - Arguments to create many Anuncios.
     *     @example
     *     // Create many Anuncios
     *     const anuncio = await prisma.anuncio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends anuncioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Anuncio.
     * @param {anuncioDeleteArgs} args - Arguments to delete one Anuncio.
     * @example
     * // Delete one Anuncio
     * const Anuncio = await prisma.anuncio.delete({
     *   where: {
     *     // ... filter to delete one Anuncio
     *   }
     * })
     * 
    **/
    delete<T extends anuncioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioDeleteArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Anuncio.
     * @param {anuncioUpdateArgs} args - Arguments to update one Anuncio.
     * @example
     * // Update one Anuncio
     * const anuncio = await prisma.anuncio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends anuncioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioUpdateArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Anuncios.
     * @param {anuncioDeleteManyArgs} args - Arguments to filter Anuncios to delete.
     * @example
     * // Delete a few Anuncios
     * const { count } = await prisma.anuncio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends anuncioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, anuncioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Anuncios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Anuncios
     * const anuncio = await prisma.anuncio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends anuncioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Anuncio.
     * @param {anuncioUpsertArgs} args - Arguments to update or create a Anuncio.
     * @example
     * // Update or create a Anuncio
     * const anuncio = await prisma.anuncio.upsert({
     *   create: {
     *     // ... data to create a Anuncio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Anuncio we want to update
     *   }
     * })
    **/
    upsert<T extends anuncioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, anuncioUpsertArgs<ExtArgs>>
    ): Prisma__anuncioClient<$Result.GetResult<Prisma.$anuncioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Anuncios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioCountArgs} args - Arguments to filter Anuncios to count.
     * @example
     * // Count the number of Anuncios
     * const count = await prisma.anuncio.count({
     *   where: {
     *     // ... the filter for the Anuncios we want to count
     *   }
     * })
    **/
    count<T extends anuncioCountArgs>(
      args?: Subset<T, anuncioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnuncioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Anuncio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnuncioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnuncioAggregateArgs>(args: Subset<T, AnuncioAggregateArgs>): Prisma.PrismaPromise<GetAnuncioAggregateType<T>>

    /**
     * Group by Anuncio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {anuncioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends anuncioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: anuncioGroupByArgs['orderBy'] }
        : { orderBy?: anuncioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, anuncioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnuncioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the anuncio model
   */
  readonly fields: anuncioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for anuncio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__anuncioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    caracteristicas<T extends anuncio$caracteristicasArgs<ExtArgs> = {}>(args?: Subset<T, anuncio$caracteristicasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$caracteristicaPayload<ExtArgs>, T, 'findMany'> | Null>;

    categorias<T extends anuncio$categoriasArgs<ExtArgs> = {}>(args?: Subset<T, anuncio$categoriasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriaPayload<ExtArgs>, T, 'findMany'> | Null>;

    servicos<T extends anuncio$servicosArgs<ExtArgs> = {}>(args?: Subset<T, anuncio$servicosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicoPayload<ExtArgs>, T, 'findMany'> | Null>;

    usuario<T extends usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuarioDefaultArgs<ExtArgs>>): Prisma__usuarioClient<$Result.GetResult<Prisma.$usuarioPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the anuncio model
   */ 
  interface anuncioFieldRefs {
    readonly id: FieldRef<"anuncio", 'Int'>
    readonly identificador: FieldRef<"anuncio", 'String'>
    readonly titulo: FieldRef<"anuncio", 'String'>
    readonly data_fim: FieldRef<"anuncio", 'DateTime'>
    readonly status: FieldRef<"anuncio", 'Boolean'>
    readonly descricao: FieldRef<"anuncio", 'String'>
    readonly caminho_pasta: FieldRef<"anuncio", 'String'>
    readonly cidade_id: FieldRef<"anuncio", 'Int'>
    readonly estado_id: FieldRef<"anuncio", 'Int'>
    readonly created_at: FieldRef<"anuncio", 'DateTime'>
    readonly updated_at: FieldRef<"anuncio", 'DateTime'>
    readonly usuario_id: FieldRef<"anuncio", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * anuncio findUnique
   */
  export type anuncioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter, which anuncio to fetch.
     */
    where: anuncioWhereUniqueInput
  }


  /**
   * anuncio findUniqueOrThrow
   */
  export type anuncioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter, which anuncio to fetch.
     */
    where: anuncioWhereUniqueInput
  }


  /**
   * anuncio findFirst
   */
  export type anuncioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter, which anuncio to fetch.
     */
    where?: anuncioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of anuncios to fetch.
     */
    orderBy?: anuncioOrderByWithRelationInput | anuncioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for anuncios.
     */
    cursor?: anuncioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` anuncios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` anuncios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of anuncios.
     */
    distinct?: AnuncioScalarFieldEnum | AnuncioScalarFieldEnum[]
  }


  /**
   * anuncio findFirstOrThrow
   */
  export type anuncioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter, which anuncio to fetch.
     */
    where?: anuncioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of anuncios to fetch.
     */
    orderBy?: anuncioOrderByWithRelationInput | anuncioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for anuncios.
     */
    cursor?: anuncioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` anuncios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` anuncios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of anuncios.
     */
    distinct?: AnuncioScalarFieldEnum | AnuncioScalarFieldEnum[]
  }


  /**
   * anuncio findMany
   */
  export type anuncioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter, which anuncios to fetch.
     */
    where?: anuncioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of anuncios to fetch.
     */
    orderBy?: anuncioOrderByWithRelationInput | anuncioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing anuncios.
     */
    cursor?: anuncioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` anuncios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` anuncios.
     */
    skip?: number
    distinct?: AnuncioScalarFieldEnum | AnuncioScalarFieldEnum[]
  }


  /**
   * anuncio create
   */
  export type anuncioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * The data needed to create a anuncio.
     */
    data: XOR<anuncioCreateInput, anuncioUncheckedCreateInput>
  }


  /**
   * anuncio createMany
   */
  export type anuncioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many anuncios.
     */
    data: anuncioCreateManyInput | anuncioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * anuncio update
   */
  export type anuncioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * The data needed to update a anuncio.
     */
    data: XOR<anuncioUpdateInput, anuncioUncheckedUpdateInput>
    /**
     * Choose, which anuncio to update.
     */
    where: anuncioWhereUniqueInput
  }


  /**
   * anuncio updateMany
   */
  export type anuncioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update anuncios.
     */
    data: XOR<anuncioUpdateManyMutationInput, anuncioUncheckedUpdateManyInput>
    /**
     * Filter which anuncios to update
     */
    where?: anuncioWhereInput
  }


  /**
   * anuncio upsert
   */
  export type anuncioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * The filter to search for the anuncio to update in case it exists.
     */
    where: anuncioWhereUniqueInput
    /**
     * In case the anuncio found by the `where` argument doesn't exist, create a new anuncio with this data.
     */
    create: XOR<anuncioCreateInput, anuncioUncheckedCreateInput>
    /**
     * In case the anuncio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<anuncioUpdateInput, anuncioUncheckedUpdateInput>
  }


  /**
   * anuncio delete
   */
  export type anuncioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
    /**
     * Filter which anuncio to delete.
     */
    where: anuncioWhereUniqueInput
  }


  /**
   * anuncio deleteMany
   */
  export type anuncioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which anuncios to delete
     */
    where?: anuncioWhereInput
  }


  /**
   * anuncio.caracteristicas
   */
  export type anuncio$caracteristicasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the caracteristica
     */
    select?: caracteristicaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: caracteristicaInclude<ExtArgs> | null
    where?: caracteristicaWhereInput
    orderBy?: caracteristicaOrderByWithRelationInput | caracteristicaOrderByWithRelationInput[]
    cursor?: caracteristicaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CaracteristicaScalarFieldEnum | CaracteristicaScalarFieldEnum[]
  }


  /**
   * anuncio.categorias
   */
  export type anuncio$categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria
     */
    select?: categoriaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: categoriaInclude<ExtArgs> | null
    where?: categoriaWhereInput
    orderBy?: categoriaOrderByWithRelationInput | categoriaOrderByWithRelationInput[]
    cursor?: categoriaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriaScalarFieldEnum | CategoriaScalarFieldEnum[]
  }


  /**
   * anuncio.servicos
   */
  export type anuncio$servicosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the servico
     */
    select?: servicoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: servicoInclude<ExtArgs> | null
    where?: servicoWhereInput
    orderBy?: servicoOrderByWithRelationInput | servicoOrderByWithRelationInput[]
    cursor?: servicoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ServicoScalarFieldEnum | ServicoScalarFieldEnum[]
  }


  /**
   * anuncio without action
   */
  export type anuncioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the anuncio
     */
    select?: anuncioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: anuncioInclude<ExtArgs> | null
  }



  /**
   * Model configuracoes
   */

  export type AggregateConfiguracoes = {
    _count: ConfiguracoesCountAggregateOutputType | null
    _avg: ConfiguracoesAvgAggregateOutputType | null
    _sum: ConfiguracoesSumAggregateOutputType | null
    _min: ConfiguracoesMinAggregateOutputType | null
    _max: ConfiguracoesMaxAggregateOutputType | null
  }

  export type ConfiguracoesAvgAggregateOutputType = {
    id: number | null
    valor_anuncio: number | null
  }

  export type ConfiguracoesSumAggregateOutputType = {
    id: number | null
    valor_anuncio: number | null
  }

  export type ConfiguracoesMinAggregateOutputType = {
    id: number | null
    ftp: string | null
    usuario_ftp: string | null
    senha_ftp: string | null
    valor_anuncio: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfiguracoesMaxAggregateOutputType = {
    id: number | null
    ftp: string | null
    usuario_ftp: string | null
    senha_ftp: string | null
    valor_anuncio: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfiguracoesCountAggregateOutputType = {
    id: number
    ftp: number
    usuario_ftp: number
    senha_ftp: number
    valor_anuncio: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ConfiguracoesAvgAggregateInputType = {
    id?: true
    valor_anuncio?: true
  }

  export type ConfiguracoesSumAggregateInputType = {
    id?: true
    valor_anuncio?: true
  }

  export type ConfiguracoesMinAggregateInputType = {
    id?: true
    ftp?: true
    usuario_ftp?: true
    senha_ftp?: true
    valor_anuncio?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfiguracoesMaxAggregateInputType = {
    id?: true
    ftp?: true
    usuario_ftp?: true
    senha_ftp?: true
    valor_anuncio?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfiguracoesCountAggregateInputType = {
    id?: true
    ftp?: true
    usuario_ftp?: true
    senha_ftp?: true
    valor_anuncio?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ConfiguracoesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes to aggregate.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configuracoes
    **/
    _count?: true | ConfiguracoesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracoesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracoesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracoesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracoesMaxAggregateInputType
  }

  export type GetConfiguracoesAggregateType<T extends ConfiguracoesAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracoes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracoes[P]>
      : GetScalarType<T[P], AggregateConfiguracoes[P]>
  }




  export type configuracoesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configuracoesWhereInput
    orderBy?: configuracoesOrderByWithAggregationInput | configuracoesOrderByWithAggregationInput[]
    by: ConfiguracoesScalarFieldEnum[] | ConfiguracoesScalarFieldEnum
    having?: configuracoesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracoesCountAggregateInputType | true
    _avg?: ConfiguracoesAvgAggregateInputType
    _sum?: ConfiguracoesSumAggregateInputType
    _min?: ConfiguracoesMinAggregateInputType
    _max?: ConfiguracoesMaxAggregateInputType
  }

  export type ConfiguracoesGroupByOutputType = {
    id: number
    ftp: string
    usuario_ftp: string
    senha_ftp: string
    valor_anuncio: number
    created_at: Date
    updated_at: Date
    _count: ConfiguracoesCountAggregateOutputType | null
    _avg: ConfiguracoesAvgAggregateOutputType | null
    _sum: ConfiguracoesSumAggregateOutputType | null
    _min: ConfiguracoesMinAggregateOutputType | null
    _max: ConfiguracoesMaxAggregateOutputType | null
  }

  type GetConfiguracoesGroupByPayload<T extends configuracoesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracoesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracoesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracoesGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracoesGroupByOutputType[P]>
        }
      >
    >


  export type configuracoesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ftp?: boolean
    usuario_ftp?: boolean
    senha_ftp?: boolean
    valor_anuncio?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["configuracoes"]>

  export type configuracoesSelectScalar = {
    id?: boolean
    ftp?: boolean
    usuario_ftp?: boolean
    senha_ftp?: boolean
    valor_anuncio?: boolean
    created_at?: boolean
    updated_at?: boolean
  }


  export type $configuracoesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configuracoes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      ftp: string
      usuario_ftp: string
      senha_ftp: string
      valor_anuncio: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["configuracoes"]>
    composites: {}
  }


  type configuracoesGetPayload<S extends boolean | null | undefined | configuracoesDefaultArgs> = $Result.GetResult<Prisma.$configuracoesPayload, S>

  type configuracoesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<configuracoesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: ConfiguracoesCountAggregateInputType | true
    }

  export interface configuracoesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configuracoes'], meta: { name: 'configuracoes' } }
    /**
     * Find zero or one Configuracoes that matches the filter.
     * @param {configuracoesFindUniqueArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends configuracoesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesFindUniqueArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Configuracoes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {configuracoesFindUniqueOrThrowArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends configuracoesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Configuracoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindFirstArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends configuracoesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesFindFirstArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Configuracoes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindFirstOrThrowArgs} args - Arguments to find a Configuracoes
     * @example
     * // Get one Configuracoes
     * const configuracoes = await prisma.configuracoes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends configuracoesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Configuracoes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracoes
     * const configuracoes = await prisma.configuracoes.findMany()
     * 
     * // Get first 10 Configuracoes
     * const configuracoes = await prisma.configuracoes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracoesWithIdOnly = await prisma.configuracoes.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends configuracoesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Configuracoes.
     * @param {configuracoesCreateArgs} args - Arguments to create a Configuracoes.
     * @example
     * // Create one Configuracoes
     * const Configuracoes = await prisma.configuracoes.create({
     *   data: {
     *     // ... data to create a Configuracoes
     *   }
     * })
     * 
    **/
    create<T extends configuracoesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesCreateArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Configuracoes.
     *     @param {configuracoesCreateManyArgs} args - Arguments to create many Configuracoes.
     *     @example
     *     // Create many Configuracoes
     *     const configuracoes = await prisma.configuracoes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends configuracoesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Configuracoes.
     * @param {configuracoesDeleteArgs} args - Arguments to delete one Configuracoes.
     * @example
     * // Delete one Configuracoes
     * const Configuracoes = await prisma.configuracoes.delete({
     *   where: {
     *     // ... filter to delete one Configuracoes
     *   }
     * })
     * 
    **/
    delete<T extends configuracoesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesDeleteArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Configuracoes.
     * @param {configuracoesUpdateArgs} args - Arguments to update one Configuracoes.
     * @example
     * // Update one Configuracoes
     * const configuracoes = await prisma.configuracoes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends configuracoesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesUpdateArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Configuracoes.
     * @param {configuracoesDeleteManyArgs} args - Arguments to filter Configuracoes to delete.
     * @example
     * // Delete a few Configuracoes
     * const { count } = await prisma.configuracoes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends configuracoesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, configuracoesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracoes
     * const configuracoes = await prisma.configuracoes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends configuracoesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Configuracoes.
     * @param {configuracoesUpsertArgs} args - Arguments to update or create a Configuracoes.
     * @example
     * // Update or create a Configuracoes
     * const configuracoes = await prisma.configuracoes.upsert({
     *   create: {
     *     // ... data to create a Configuracoes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracoes we want to update
     *   }
     * })
    **/
    upsert<T extends configuracoesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, configuracoesUpsertArgs<ExtArgs>>
    ): Prisma__configuracoesClient<$Result.GetResult<Prisma.$configuracoesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesCountArgs} args - Arguments to filter Configuracoes to count.
     * @example
     * // Count the number of Configuracoes
     * const count = await prisma.configuracoes.count({
     *   where: {
     *     // ... the filter for the Configuracoes we want to count
     *   }
     * })
    **/
    count<T extends configuracoesCountArgs>(
      args?: Subset<T, configuracoesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracoesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracoesAggregateArgs>(args: Subset<T, ConfiguracoesAggregateArgs>): Prisma.PrismaPromise<GetConfiguracoesAggregateType<T>>

    /**
     * Group by Configuracoes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracoesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configuracoesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configuracoesGroupByArgs['orderBy'] }
        : { orderBy?: configuracoesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configuracoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configuracoes model
   */
  readonly fields: configuracoesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configuracoes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configuracoesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the configuracoes model
   */ 
  interface configuracoesFieldRefs {
    readonly id: FieldRef<"configuracoes", 'Int'>
    readonly ftp: FieldRef<"configuracoes", 'String'>
    readonly usuario_ftp: FieldRef<"configuracoes", 'String'>
    readonly senha_ftp: FieldRef<"configuracoes", 'String'>
    readonly valor_anuncio: FieldRef<"configuracoes", 'Int'>
    readonly created_at: FieldRef<"configuracoes", 'DateTime'>
    readonly updated_at: FieldRef<"configuracoes", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * configuracoes findUnique
   */
  export type configuracoesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where: configuracoesWhereUniqueInput
  }


  /**
   * configuracoes findUniqueOrThrow
   */
  export type configuracoesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where: configuracoesWhereUniqueInput
  }


  /**
   * configuracoes findFirst
   */
  export type configuracoesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes.
     */
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }


  /**
   * configuracoes findFirstOrThrow
   */
  export type configuracoesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracoes.
     */
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }


  /**
   * configuracoes findMany
   */
  export type configuracoesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter, which configuracoes to fetch.
     */
    where?: configuracoesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracoes to fetch.
     */
    orderBy?: configuracoesOrderByWithRelationInput | configuracoesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configuracoes.
     */
    cursor?: configuracoesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracoes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracoes.
     */
    skip?: number
    distinct?: ConfiguracoesScalarFieldEnum | ConfiguracoesScalarFieldEnum[]
  }


  /**
   * configuracoes create
   */
  export type configuracoesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * The data needed to create a configuracoes.
     */
    data: XOR<configuracoesCreateInput, configuracoesUncheckedCreateInput>
  }


  /**
   * configuracoes createMany
   */
  export type configuracoesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configuracoes.
     */
    data: configuracoesCreateManyInput | configuracoesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * configuracoes update
   */
  export type configuracoesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * The data needed to update a configuracoes.
     */
    data: XOR<configuracoesUpdateInput, configuracoesUncheckedUpdateInput>
    /**
     * Choose, which configuracoes to update.
     */
    where: configuracoesWhereUniqueInput
  }


  /**
   * configuracoes updateMany
   */
  export type configuracoesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configuracoes.
     */
    data: XOR<configuracoesUpdateManyMutationInput, configuracoesUncheckedUpdateManyInput>
    /**
     * Filter which configuracoes to update
     */
    where?: configuracoesWhereInput
  }


  /**
   * configuracoes upsert
   */
  export type configuracoesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * The filter to search for the configuracoes to update in case it exists.
     */
    where: configuracoesWhereUniqueInput
    /**
     * In case the configuracoes found by the `where` argument doesn't exist, create a new configuracoes with this data.
     */
    create: XOR<configuracoesCreateInput, configuracoesUncheckedCreateInput>
    /**
     * In case the configuracoes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configuracoesUpdateInput, configuracoesUncheckedUpdateInput>
  }


  /**
   * configuracoes delete
   */
  export type configuracoesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
    /**
     * Filter which configuracoes to delete.
     */
    where: configuracoesWhereUniqueInput
  }


  /**
   * configuracoes deleteMany
   */
  export type configuracoesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracoes to delete
     */
    where?: configuracoesWhereInput
  }


  /**
   * configuracoes without action
   */
  export type configuracoesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracoes
     */
    select?: configuracoesSelect<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuarioScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    office: 'office',
    phone: 'phone',
    whatsapp: 'whatsapp',
    password: 'password',
    access_level: 'access_level',
    main_user: 'main_user',
    active: 'active',
    fcm_tokens: 'fcm_tokens',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsuarioScalarFieldEnum = (typeof UsuarioScalarFieldEnum)[keyof typeof UsuarioScalarFieldEnum]


  export const CaracteristicaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    anuncioId: 'anuncioId'
  };

  export type CaracteristicaScalarFieldEnum = (typeof CaracteristicaScalarFieldEnum)[keyof typeof CaracteristicaScalarFieldEnum]


  export const ServicoScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    anuncioId: 'anuncioId'
  };

  export type ServicoScalarFieldEnum = (typeof ServicoScalarFieldEnum)[keyof typeof ServicoScalarFieldEnum]


  export const CategoriaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    anuncioId: 'anuncioId'
  };

  export type CategoriaScalarFieldEnum = (typeof CategoriaScalarFieldEnum)[keyof typeof CategoriaScalarFieldEnum]


  export const AnuncioScalarFieldEnum: {
    id: 'id',
    identificador: 'identificador',
    titulo: 'titulo',
    data_fim: 'data_fim',
    status: 'status',
    descricao: 'descricao',
    caminho_pasta: 'caminho_pasta',
    cidade_id: 'cidade_id',
    estado_id: 'estado_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    usuario_id: 'usuario_id'
  };

  export type AnuncioScalarFieldEnum = (typeof AnuncioScalarFieldEnum)[keyof typeof AnuncioScalarFieldEnum]


  export const ConfiguracoesScalarFieldEnum: {
    id: 'id',
    ftp: 'ftp',
    usuario_ftp: 'usuario_ftp',
    senha_ftp: 'senha_ftp',
    valor_anuncio: 'valor_anuncio',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ConfiguracoesScalarFieldEnum = (typeof ConfiguracoesScalarFieldEnum)[keyof typeof ConfiguracoesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type usuarioWhereInput = {
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    id?: IntFilter<"usuario"> | number
    email?: StringFilter<"usuario"> | string
    name?: StringFilter<"usuario"> | string
    office?: StringFilter<"usuario"> | string
    phone?: StringFilter<"usuario"> | string
    whatsapp?: BoolFilter<"usuario"> | boolean
    password?: StringFilter<"usuario"> | string
    access_level?: IntFilter<"usuario"> | number
    main_user?: BoolFilter<"usuario"> | boolean
    active?: BoolFilter<"usuario"> | boolean
    fcm_tokens?: JsonNullableFilter<"usuario">
    created_at?: DateTimeFilter<"usuario"> | Date | string
    updated_at?: DateTimeFilter<"usuario"> | Date | string
    anuncio?: AnuncioListRelationFilter
  }

  export type usuarioOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    office?: SortOrder
    phone?: SortOrder
    whatsapp?: SortOrder
    password?: SortOrder
    access_level?: SortOrder
    main_user?: SortOrder
    active?: SortOrder
    fcm_tokens?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncio?: anuncioOrderByRelationAggregateInput
  }

  export type usuarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    id_main_user?: usuarioIdMain_userCompoundUniqueInput
    AND?: usuarioWhereInput | usuarioWhereInput[]
    OR?: usuarioWhereInput[]
    NOT?: usuarioWhereInput | usuarioWhereInput[]
    name?: StringFilter<"usuario"> | string
    office?: StringFilter<"usuario"> | string
    phone?: StringFilter<"usuario"> | string
    whatsapp?: BoolFilter<"usuario"> | boolean
    password?: StringFilter<"usuario"> | string
    access_level?: IntFilter<"usuario"> | number
    main_user?: BoolFilter<"usuario"> | boolean
    active?: BoolFilter<"usuario"> | boolean
    fcm_tokens?: JsonNullableFilter<"usuario">
    created_at?: DateTimeFilter<"usuario"> | Date | string
    updated_at?: DateTimeFilter<"usuario"> | Date | string
    anuncio?: AnuncioListRelationFilter
  }, "id" | "email" | "id_main_user">

  export type usuarioOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    office?: SortOrder
    phone?: SortOrder
    whatsapp?: SortOrder
    password?: SortOrder
    access_level?: SortOrder
    main_user?: SortOrder
    active?: SortOrder
    fcm_tokens?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: usuarioCountOrderByAggregateInput
    _avg?: usuarioAvgOrderByAggregateInput
    _max?: usuarioMaxOrderByAggregateInput
    _min?: usuarioMinOrderByAggregateInput
    _sum?: usuarioSumOrderByAggregateInput
  }

  export type usuarioScalarWhereWithAggregatesInput = {
    AND?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    OR?: usuarioScalarWhereWithAggregatesInput[]
    NOT?: usuarioScalarWhereWithAggregatesInput | usuarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuario"> | number
    email?: StringWithAggregatesFilter<"usuario"> | string
    name?: StringWithAggregatesFilter<"usuario"> | string
    office?: StringWithAggregatesFilter<"usuario"> | string
    phone?: StringWithAggregatesFilter<"usuario"> | string
    whatsapp?: BoolWithAggregatesFilter<"usuario"> | boolean
    password?: StringWithAggregatesFilter<"usuario"> | string
    access_level?: IntWithAggregatesFilter<"usuario"> | number
    main_user?: BoolWithAggregatesFilter<"usuario"> | boolean
    active?: BoolWithAggregatesFilter<"usuario"> | boolean
    fcm_tokens?: JsonNullableWithAggregatesFilter<"usuario">
    created_at?: DateTimeWithAggregatesFilter<"usuario"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"usuario"> | Date | string
  }

  export type caracteristicaWhereInput = {
    AND?: caracteristicaWhereInput | caracteristicaWhereInput[]
    OR?: caracteristicaWhereInput[]
    NOT?: caracteristicaWhereInput | caracteristicaWhereInput[]
    id?: IntFilter<"caracteristica"> | number
    nome?: StringFilter<"caracteristica"> | string
    status?: BoolFilter<"caracteristica"> | boolean
    created_at?: DateTimeFilter<"caracteristica"> | Date | string
    updated_at?: DateTimeFilter<"caracteristica"> | Date | string
    anuncioId?: IntNullableFilter<"caracteristica"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }

  export type caracteristicaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    anuncio?: anuncioOrderByWithRelationInput
  }

  export type caracteristicaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: caracteristicaWhereInput | caracteristicaWhereInput[]
    OR?: caracteristicaWhereInput[]
    NOT?: caracteristicaWhereInput | caracteristicaWhereInput[]
    nome?: StringFilter<"caracteristica"> | string
    status?: BoolFilter<"caracteristica"> | boolean
    created_at?: DateTimeFilter<"caracteristica"> | Date | string
    updated_at?: DateTimeFilter<"caracteristica"> | Date | string
    anuncioId?: IntNullableFilter<"caracteristica"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }, "id">

  export type caracteristicaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    _count?: caracteristicaCountOrderByAggregateInput
    _avg?: caracteristicaAvgOrderByAggregateInput
    _max?: caracteristicaMaxOrderByAggregateInput
    _min?: caracteristicaMinOrderByAggregateInput
    _sum?: caracteristicaSumOrderByAggregateInput
  }

  export type caracteristicaScalarWhereWithAggregatesInput = {
    AND?: caracteristicaScalarWhereWithAggregatesInput | caracteristicaScalarWhereWithAggregatesInput[]
    OR?: caracteristicaScalarWhereWithAggregatesInput[]
    NOT?: caracteristicaScalarWhereWithAggregatesInput | caracteristicaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"caracteristica"> | number
    nome?: StringWithAggregatesFilter<"caracteristica"> | string
    status?: BoolWithAggregatesFilter<"caracteristica"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"caracteristica"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"caracteristica"> | Date | string
    anuncioId?: IntNullableWithAggregatesFilter<"caracteristica"> | number | null
  }

  export type servicoWhereInput = {
    AND?: servicoWhereInput | servicoWhereInput[]
    OR?: servicoWhereInput[]
    NOT?: servicoWhereInput | servicoWhereInput[]
    id?: IntFilter<"servico"> | number
    nome?: StringFilter<"servico"> | string
    status?: BoolFilter<"servico"> | boolean
    created_at?: DateTimeFilter<"servico"> | Date | string
    updated_at?: DateTimeFilter<"servico"> | Date | string
    anuncioId?: IntNullableFilter<"servico"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }

  export type servicoOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    anuncio?: anuncioOrderByWithRelationInput
  }

  export type servicoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: servicoWhereInput | servicoWhereInput[]
    OR?: servicoWhereInput[]
    NOT?: servicoWhereInput | servicoWhereInput[]
    nome?: StringFilter<"servico"> | string
    status?: BoolFilter<"servico"> | boolean
    created_at?: DateTimeFilter<"servico"> | Date | string
    updated_at?: DateTimeFilter<"servico"> | Date | string
    anuncioId?: IntNullableFilter<"servico"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }, "id">

  export type servicoOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    _count?: servicoCountOrderByAggregateInput
    _avg?: servicoAvgOrderByAggregateInput
    _max?: servicoMaxOrderByAggregateInput
    _min?: servicoMinOrderByAggregateInput
    _sum?: servicoSumOrderByAggregateInput
  }

  export type servicoScalarWhereWithAggregatesInput = {
    AND?: servicoScalarWhereWithAggregatesInput | servicoScalarWhereWithAggregatesInput[]
    OR?: servicoScalarWhereWithAggregatesInput[]
    NOT?: servicoScalarWhereWithAggregatesInput | servicoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"servico"> | number
    nome?: StringWithAggregatesFilter<"servico"> | string
    status?: BoolWithAggregatesFilter<"servico"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"servico"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"servico"> | Date | string
    anuncioId?: IntNullableWithAggregatesFilter<"servico"> | number | null
  }

  export type categoriaWhereInput = {
    AND?: categoriaWhereInput | categoriaWhereInput[]
    OR?: categoriaWhereInput[]
    NOT?: categoriaWhereInput | categoriaWhereInput[]
    id?: IntFilter<"categoria"> | number
    nome?: StringFilter<"categoria"> | string
    status?: BoolFilter<"categoria"> | boolean
    created_at?: DateTimeFilter<"categoria"> | Date | string
    updated_at?: DateTimeFilter<"categoria"> | Date | string
    anuncioId?: IntNullableFilter<"categoria"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }

  export type categoriaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    anuncio?: anuncioOrderByWithRelationInput
  }

  export type categoriaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: categoriaWhereInput | categoriaWhereInput[]
    OR?: categoriaWhereInput[]
    NOT?: categoriaWhereInput | categoriaWhereInput[]
    nome?: StringFilter<"categoria"> | string
    status?: BoolFilter<"categoria"> | boolean
    created_at?: DateTimeFilter<"categoria"> | Date | string
    updated_at?: DateTimeFilter<"categoria"> | Date | string
    anuncioId?: IntNullableFilter<"categoria"> | number | null
    anuncio?: XOR<AnuncioNullableRelationFilter, anuncioWhereInput> | null
  }, "id">

  export type categoriaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrderInput | SortOrder
    _count?: categoriaCountOrderByAggregateInput
    _avg?: categoriaAvgOrderByAggregateInput
    _max?: categoriaMaxOrderByAggregateInput
    _min?: categoriaMinOrderByAggregateInput
    _sum?: categoriaSumOrderByAggregateInput
  }

  export type categoriaScalarWhereWithAggregatesInput = {
    AND?: categoriaScalarWhereWithAggregatesInput | categoriaScalarWhereWithAggregatesInput[]
    OR?: categoriaScalarWhereWithAggregatesInput[]
    NOT?: categoriaScalarWhereWithAggregatesInput | categoriaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categoria"> | number
    nome?: StringWithAggregatesFilter<"categoria"> | string
    status?: BoolWithAggregatesFilter<"categoria"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"categoria"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"categoria"> | Date | string
    anuncioId?: IntNullableWithAggregatesFilter<"categoria"> | number | null
  }

  export type anuncioWhereInput = {
    AND?: anuncioWhereInput | anuncioWhereInput[]
    OR?: anuncioWhereInput[]
    NOT?: anuncioWhereInput | anuncioWhereInput[]
    id?: IntFilter<"anuncio"> | number
    identificador?: StringFilter<"anuncio"> | string
    titulo?: StringFilter<"anuncio"> | string
    data_fim?: DateTimeFilter<"anuncio"> | Date | string
    status?: BoolFilter<"anuncio"> | boolean
    descricao?: StringFilter<"anuncio"> | string
    caminho_pasta?: StringFilter<"anuncio"> | string
    cidade_id?: IntFilter<"anuncio"> | number
    estado_id?: IntFilter<"anuncio"> | number
    created_at?: DateTimeFilter<"anuncio"> | Date | string
    updated_at?: DateTimeFilter<"anuncio"> | Date | string
    usuario_id?: IntFilter<"anuncio"> | number
    caracteristicas?: CaracteristicaListRelationFilter
    categorias?: CategoriaListRelationFilter
    servicos?: ServicoListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, usuarioWhereInput>
  }

  export type anuncioOrderByWithRelationInput = {
    id?: SortOrder
    identificador?: SortOrder
    titulo?: SortOrder
    data_fim?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    caminho_pasta?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuario_id?: SortOrder
    caracteristicas?: caracteristicaOrderByRelationAggregateInput
    categorias?: categoriaOrderByRelationAggregateInput
    servicos?: servicoOrderByRelationAggregateInput
    usuario?: usuarioOrderByWithRelationInput
  }

  export type anuncioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_usuario_id?: anuncioIdUsuario_idCompoundUniqueInput
    AND?: anuncioWhereInput | anuncioWhereInput[]
    OR?: anuncioWhereInput[]
    NOT?: anuncioWhereInput | anuncioWhereInput[]
    identificador?: StringFilter<"anuncio"> | string
    titulo?: StringFilter<"anuncio"> | string
    data_fim?: DateTimeFilter<"anuncio"> | Date | string
    status?: BoolFilter<"anuncio"> | boolean
    descricao?: StringFilter<"anuncio"> | string
    caminho_pasta?: StringFilter<"anuncio"> | string
    cidade_id?: IntFilter<"anuncio"> | number
    estado_id?: IntFilter<"anuncio"> | number
    created_at?: DateTimeFilter<"anuncio"> | Date | string
    updated_at?: DateTimeFilter<"anuncio"> | Date | string
    usuario_id?: IntFilter<"anuncio"> | number
    caracteristicas?: CaracteristicaListRelationFilter
    categorias?: CategoriaListRelationFilter
    servicos?: ServicoListRelationFilter
    usuario?: XOR<UsuarioRelationFilter, usuarioWhereInput>
  }, "id" | "id_usuario_id">

  export type anuncioOrderByWithAggregationInput = {
    id?: SortOrder
    identificador?: SortOrder
    titulo?: SortOrder
    data_fim?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    caminho_pasta?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuario_id?: SortOrder
    _count?: anuncioCountOrderByAggregateInput
    _avg?: anuncioAvgOrderByAggregateInput
    _max?: anuncioMaxOrderByAggregateInput
    _min?: anuncioMinOrderByAggregateInput
    _sum?: anuncioSumOrderByAggregateInput
  }

  export type anuncioScalarWhereWithAggregatesInput = {
    AND?: anuncioScalarWhereWithAggregatesInput | anuncioScalarWhereWithAggregatesInput[]
    OR?: anuncioScalarWhereWithAggregatesInput[]
    NOT?: anuncioScalarWhereWithAggregatesInput | anuncioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"anuncio"> | number
    identificador?: StringWithAggregatesFilter<"anuncio"> | string
    titulo?: StringWithAggregatesFilter<"anuncio"> | string
    data_fim?: DateTimeWithAggregatesFilter<"anuncio"> | Date | string
    status?: BoolWithAggregatesFilter<"anuncio"> | boolean
    descricao?: StringWithAggregatesFilter<"anuncio"> | string
    caminho_pasta?: StringWithAggregatesFilter<"anuncio"> | string
    cidade_id?: IntWithAggregatesFilter<"anuncio"> | number
    estado_id?: IntWithAggregatesFilter<"anuncio"> | number
    created_at?: DateTimeWithAggregatesFilter<"anuncio"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"anuncio"> | Date | string
    usuario_id?: IntWithAggregatesFilter<"anuncio"> | number
  }

  export type configuracoesWhereInput = {
    AND?: configuracoesWhereInput | configuracoesWhereInput[]
    OR?: configuracoesWhereInput[]
    NOT?: configuracoesWhereInput | configuracoesWhereInput[]
    id?: IntFilter<"configuracoes"> | number
    ftp?: StringFilter<"configuracoes"> | string
    usuario_ftp?: StringFilter<"configuracoes"> | string
    senha_ftp?: StringFilter<"configuracoes"> | string
    valor_anuncio?: IntFilter<"configuracoes"> | number
    created_at?: DateTimeFilter<"configuracoes"> | Date | string
    updated_at?: DateTimeFilter<"configuracoes"> | Date | string
  }

  export type configuracoesOrderByWithRelationInput = {
    id?: SortOrder
    ftp?: SortOrder
    usuario_ftp?: SortOrder
    senha_ftp?: SortOrder
    valor_anuncio?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracoesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: configuracoesWhereInput | configuracoesWhereInput[]
    OR?: configuracoesWhereInput[]
    NOT?: configuracoesWhereInput | configuracoesWhereInput[]
    ftp?: StringFilter<"configuracoes"> | string
    usuario_ftp?: StringFilter<"configuracoes"> | string
    senha_ftp?: StringFilter<"configuracoes"> | string
    valor_anuncio?: IntFilter<"configuracoes"> | number
    created_at?: DateTimeFilter<"configuracoes"> | Date | string
    updated_at?: DateTimeFilter<"configuracoes"> | Date | string
  }, "id">

  export type configuracoesOrderByWithAggregationInput = {
    id?: SortOrder
    ftp?: SortOrder
    usuario_ftp?: SortOrder
    senha_ftp?: SortOrder
    valor_anuncio?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: configuracoesCountOrderByAggregateInput
    _avg?: configuracoesAvgOrderByAggregateInput
    _max?: configuracoesMaxOrderByAggregateInput
    _min?: configuracoesMinOrderByAggregateInput
    _sum?: configuracoesSumOrderByAggregateInput
  }

  export type configuracoesScalarWhereWithAggregatesInput = {
    AND?: configuracoesScalarWhereWithAggregatesInput | configuracoesScalarWhereWithAggregatesInput[]
    OR?: configuracoesScalarWhereWithAggregatesInput[]
    NOT?: configuracoesScalarWhereWithAggregatesInput | configuracoesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"configuracoes"> | number
    ftp?: StringWithAggregatesFilter<"configuracoes"> | string
    usuario_ftp?: StringWithAggregatesFilter<"configuracoes"> | string
    senha_ftp?: StringWithAggregatesFilter<"configuracoes"> | string
    valor_anuncio?: IntWithAggregatesFilter<"configuracoes"> | number
    created_at?: DateTimeWithAggregatesFilter<"configuracoes"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"configuracoes"> | Date | string
  }

  export type usuarioCreateInput = {
    email: string
    name: string
    office: string
    phone: string
    whatsapp?: boolean
    password: string
    access_level?: number
    main_user?: boolean
    active?: boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
    anuncio?: anuncioCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUncheckedCreateInput = {
    id?: number
    email: string
    name: string
    office: string
    phone: string
    whatsapp?: boolean
    password: string
    access_level?: number
    main_user?: boolean
    active?: boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
    anuncio?: anuncioUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type usuarioUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncio?: anuncioUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncio?: anuncioUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type usuarioCreateManyInput = {
    id?: number
    email: string
    name: string
    office: string
    phone: string
    whatsapp?: boolean
    password: string
    access_level?: number
    main_user?: boolean
    active?: boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usuarioUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usuarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type caracteristicaCreateInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncio?: anuncioCreateNestedOneWithoutCaracteristicasInput
  }

  export type caracteristicaUncheckedCreateInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type caracteristicaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncio?: anuncioUpdateOneWithoutCaracteristicasNestedInput
  }

  export type caracteristicaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type caracteristicaCreateManyInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type caracteristicaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type caracteristicaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type servicoCreateInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncio?: anuncioCreateNestedOneWithoutServicosInput
  }

  export type servicoUncheckedCreateInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type servicoUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncio?: anuncioUpdateOneWithoutServicosNestedInput
  }

  export type servicoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type servicoCreateManyInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type servicoUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type servicoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaCreateInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncio?: anuncioCreateNestedOneWithoutCategoriasInput
  }

  export type categoriaUncheckedCreateInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type categoriaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncio?: anuncioUpdateOneWithoutCategoriasNestedInput
  }

  export type categoriaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type categoriaCreateManyInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    anuncioId?: number | null
  }

  export type categoriaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    anuncioId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type anuncioCreateInput = {
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    caracteristicas?: caracteristicaCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaCreateNestedManyWithoutAnuncioInput
    servicos?: servicoCreateNestedManyWithoutAnuncioInput
    usuario: usuarioCreateNestedOneWithoutAnuncioInput
  }

  export type anuncioUncheckedCreateInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: number
    caracteristicas?: caracteristicaUncheckedCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaUncheckedCreateNestedManyWithoutAnuncioInput
    servicos?: servicoUncheckedCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioUpdateInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: caracteristicaUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUpdateManyWithoutAnuncioNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: IntFieldUpdateOperationsInput | number
    caracteristicas?: caracteristicaUncheckedUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUncheckedUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUncheckedUpdateManyWithoutAnuncioNestedInput
  }

  export type anuncioCreateManyInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: number
  }

  export type anuncioUpdateManyMutationInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type anuncioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: IntFieldUpdateOperationsInput | number
  }

  export type configuracoesCreateInput = {
    ftp: string
    usuario_ftp: string
    senha_ftp: string
    valor_anuncio: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracoesUncheckedCreateInput = {
    id?: number
    ftp: string
    usuario_ftp: string
    senha_ftp: string
    valor_anuncio: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracoesUpdateInput = {
    ftp?: StringFieldUpdateOperationsInput | string
    usuario_ftp?: StringFieldUpdateOperationsInput | string
    senha_ftp?: StringFieldUpdateOperationsInput | string
    valor_anuncio?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    ftp?: StringFieldUpdateOperationsInput | string
    usuario_ftp?: StringFieldUpdateOperationsInput | string
    senha_ftp?: StringFieldUpdateOperationsInput | string
    valor_anuncio?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesCreateManyInput = {
    id?: number
    ftp: string
    usuario_ftp: string
    senha_ftp: string
    valor_anuncio: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type configuracoesUpdateManyMutationInput = {
    ftp?: StringFieldUpdateOperationsInput | string
    usuario_ftp?: StringFieldUpdateOperationsInput | string
    senha_ftp?: StringFieldUpdateOperationsInput | string
    valor_anuncio?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type configuracoesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    ftp?: StringFieldUpdateOperationsInput | string
    usuario_ftp?: StringFieldUpdateOperationsInput | string
    senha_ftp?: StringFieldUpdateOperationsInput | string
    valor_anuncio?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AnuncioListRelationFilter = {
    every?: anuncioWhereInput
    some?: anuncioWhereInput
    none?: anuncioWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type anuncioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuarioIdMain_userCompoundUniqueInput = {
    id: number
    main_user: boolean
  }

  export type usuarioCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    office?: SortOrder
    phone?: SortOrder
    whatsapp?: SortOrder
    password?: SortOrder
    access_level?: SortOrder
    main_user?: SortOrder
    active?: SortOrder
    fcm_tokens?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usuarioAvgOrderByAggregateInput = {
    id?: SortOrder
    access_level?: SortOrder
  }

  export type usuarioMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    office?: SortOrder
    phone?: SortOrder
    whatsapp?: SortOrder
    password?: SortOrder
    access_level?: SortOrder
    main_user?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usuarioMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    office?: SortOrder
    phone?: SortOrder
    whatsapp?: SortOrder
    password?: SortOrder
    access_level?: SortOrder
    main_user?: SortOrder
    active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usuarioSumOrderByAggregateInput = {
    id?: SortOrder
    access_level?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type AnuncioNullableRelationFilter = {
    is?: anuncioWhereInput | null
    isNot?: anuncioWhereInput | null
  }

  export type caracteristicaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type caracteristicaAvgOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type caracteristicaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type caracteristicaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type caracteristicaSumOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type servicoCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type servicoAvgOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type servicoMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type servicoMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type servicoSumOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type categoriaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type categoriaAvgOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type categoriaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type categoriaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    anuncioId?: SortOrder
  }

  export type categoriaSumOrderByAggregateInput = {
    id?: SortOrder
    anuncioId?: SortOrder
  }

  export type CaracteristicaListRelationFilter = {
    every?: caracteristicaWhereInput
    some?: caracteristicaWhereInput
    none?: caracteristicaWhereInput
  }

  export type CategoriaListRelationFilter = {
    every?: categoriaWhereInput
    some?: categoriaWhereInput
    none?: categoriaWhereInput
  }

  export type ServicoListRelationFilter = {
    every?: servicoWhereInput
    some?: servicoWhereInput
    none?: servicoWhereInput
  }

  export type UsuarioRelationFilter = {
    is?: usuarioWhereInput
    isNot?: usuarioWhereInput
  }

  export type caracteristicaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type servicoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type anuncioIdUsuario_idCompoundUniqueInput = {
    id: number
    usuario_id: number
  }

  export type anuncioCountOrderByAggregateInput = {
    id?: SortOrder
    identificador?: SortOrder
    titulo?: SortOrder
    data_fim?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    caminho_pasta?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuario_id?: SortOrder
  }

  export type anuncioAvgOrderByAggregateInput = {
    id?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type anuncioMaxOrderByAggregateInput = {
    id?: SortOrder
    identificador?: SortOrder
    titulo?: SortOrder
    data_fim?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    caminho_pasta?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuario_id?: SortOrder
  }

  export type anuncioMinOrderByAggregateInput = {
    id?: SortOrder
    identificador?: SortOrder
    titulo?: SortOrder
    data_fim?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    caminho_pasta?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    usuario_id?: SortOrder
  }

  export type anuncioSumOrderByAggregateInput = {
    id?: SortOrder
    cidade_id?: SortOrder
    estado_id?: SortOrder
    usuario_id?: SortOrder
  }

  export type configuracoesCountOrderByAggregateInput = {
    id?: SortOrder
    ftp?: SortOrder
    usuario_ftp?: SortOrder
    senha_ftp?: SortOrder
    valor_anuncio?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracoesAvgOrderByAggregateInput = {
    id?: SortOrder
    valor_anuncio?: SortOrder
  }

  export type configuracoesMaxOrderByAggregateInput = {
    id?: SortOrder
    ftp?: SortOrder
    usuario_ftp?: SortOrder
    senha_ftp?: SortOrder
    valor_anuncio?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracoesMinOrderByAggregateInput = {
    id?: SortOrder
    ftp?: SortOrder
    usuario_ftp?: SortOrder
    senha_ftp?: SortOrder
    valor_anuncio?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configuracoesSumOrderByAggregateInput = {
    id?: SortOrder
    valor_anuncio?: SortOrder
  }

  export type anuncioCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput> | anuncioCreateWithoutUsuarioInput[] | anuncioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: anuncioCreateOrConnectWithoutUsuarioInput | anuncioCreateOrConnectWithoutUsuarioInput[]
    createMany?: anuncioCreateManyUsuarioInputEnvelope
    connect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
  }

  export type anuncioUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput> | anuncioCreateWithoutUsuarioInput[] | anuncioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: anuncioCreateOrConnectWithoutUsuarioInput | anuncioCreateOrConnectWithoutUsuarioInput[]
    createMany?: anuncioCreateManyUsuarioInputEnvelope
    connect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type anuncioUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput> | anuncioCreateWithoutUsuarioInput[] | anuncioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: anuncioCreateOrConnectWithoutUsuarioInput | anuncioCreateOrConnectWithoutUsuarioInput[]
    upsert?: anuncioUpsertWithWhereUniqueWithoutUsuarioInput | anuncioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: anuncioCreateManyUsuarioInputEnvelope
    set?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    disconnect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    delete?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    connect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    update?: anuncioUpdateWithWhereUniqueWithoutUsuarioInput | anuncioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: anuncioUpdateManyWithWhereWithoutUsuarioInput | anuncioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: anuncioScalarWhereInput | anuncioScalarWhereInput[]
  }

  export type anuncioUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput> | anuncioCreateWithoutUsuarioInput[] | anuncioUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: anuncioCreateOrConnectWithoutUsuarioInput | anuncioCreateOrConnectWithoutUsuarioInput[]
    upsert?: anuncioUpsertWithWhereUniqueWithoutUsuarioInput | anuncioUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: anuncioCreateManyUsuarioInputEnvelope
    set?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    disconnect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    delete?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    connect?: anuncioWhereUniqueInput | anuncioWhereUniqueInput[]
    update?: anuncioUpdateWithWhereUniqueWithoutUsuarioInput | anuncioUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: anuncioUpdateManyWithWhereWithoutUsuarioInput | anuncioUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: anuncioScalarWhereInput | anuncioScalarWhereInput[]
  }

  export type anuncioCreateNestedOneWithoutCaracteristicasInput = {
    create?: XOR<anuncioCreateWithoutCaracteristicasInput, anuncioUncheckedCreateWithoutCaracteristicasInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutCaracteristicasInput
    connect?: anuncioWhereUniqueInput
  }

  export type anuncioUpdateOneWithoutCaracteristicasNestedInput = {
    create?: XOR<anuncioCreateWithoutCaracteristicasInput, anuncioUncheckedCreateWithoutCaracteristicasInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutCaracteristicasInput
    upsert?: anuncioUpsertWithoutCaracteristicasInput
    disconnect?: anuncioWhereInput | boolean
    delete?: anuncioWhereInput | boolean
    connect?: anuncioWhereUniqueInput
    update?: XOR<XOR<anuncioUpdateToOneWithWhereWithoutCaracteristicasInput, anuncioUpdateWithoutCaracteristicasInput>, anuncioUncheckedUpdateWithoutCaracteristicasInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type anuncioCreateNestedOneWithoutServicosInput = {
    create?: XOR<anuncioCreateWithoutServicosInput, anuncioUncheckedCreateWithoutServicosInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutServicosInput
    connect?: anuncioWhereUniqueInput
  }

  export type anuncioUpdateOneWithoutServicosNestedInput = {
    create?: XOR<anuncioCreateWithoutServicosInput, anuncioUncheckedCreateWithoutServicosInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutServicosInput
    upsert?: anuncioUpsertWithoutServicosInput
    disconnect?: anuncioWhereInput | boolean
    delete?: anuncioWhereInput | boolean
    connect?: anuncioWhereUniqueInput
    update?: XOR<XOR<anuncioUpdateToOneWithWhereWithoutServicosInput, anuncioUpdateWithoutServicosInput>, anuncioUncheckedUpdateWithoutServicosInput>
  }

  export type anuncioCreateNestedOneWithoutCategoriasInput = {
    create?: XOR<anuncioCreateWithoutCategoriasInput, anuncioUncheckedCreateWithoutCategoriasInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutCategoriasInput
    connect?: anuncioWhereUniqueInput
  }

  export type anuncioUpdateOneWithoutCategoriasNestedInput = {
    create?: XOR<anuncioCreateWithoutCategoriasInput, anuncioUncheckedCreateWithoutCategoriasInput>
    connectOrCreate?: anuncioCreateOrConnectWithoutCategoriasInput
    upsert?: anuncioUpsertWithoutCategoriasInput
    disconnect?: anuncioWhereInput | boolean
    delete?: anuncioWhereInput | boolean
    connect?: anuncioWhereUniqueInput
    update?: XOR<XOR<anuncioUpdateToOneWithWhereWithoutCategoriasInput, anuncioUpdateWithoutCategoriasInput>, anuncioUncheckedUpdateWithoutCategoriasInput>
  }

  export type caracteristicaCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput> | caracteristicaCreateWithoutAnuncioInput[] | caracteristicaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: caracteristicaCreateOrConnectWithoutAnuncioInput | caracteristicaCreateOrConnectWithoutAnuncioInput[]
    createMany?: caracteristicaCreateManyAnuncioInputEnvelope
    connect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
  }

  export type categoriaCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput> | categoriaCreateWithoutAnuncioInput[] | categoriaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: categoriaCreateOrConnectWithoutAnuncioInput | categoriaCreateOrConnectWithoutAnuncioInput[]
    createMany?: categoriaCreateManyAnuncioInputEnvelope
    connect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
  }

  export type servicoCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput> | servicoCreateWithoutAnuncioInput[] | servicoUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: servicoCreateOrConnectWithoutAnuncioInput | servicoCreateOrConnectWithoutAnuncioInput[]
    createMany?: servicoCreateManyAnuncioInputEnvelope
    connect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
  }

  export type usuarioCreateNestedOneWithoutAnuncioInput = {
    create?: XOR<usuarioCreateWithoutAnuncioInput, usuarioUncheckedCreateWithoutAnuncioInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutAnuncioInput
    connect?: usuarioWhereUniqueInput
  }

  export type caracteristicaUncheckedCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput> | caracteristicaCreateWithoutAnuncioInput[] | caracteristicaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: caracteristicaCreateOrConnectWithoutAnuncioInput | caracteristicaCreateOrConnectWithoutAnuncioInput[]
    createMany?: caracteristicaCreateManyAnuncioInputEnvelope
    connect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
  }

  export type categoriaUncheckedCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput> | categoriaCreateWithoutAnuncioInput[] | categoriaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: categoriaCreateOrConnectWithoutAnuncioInput | categoriaCreateOrConnectWithoutAnuncioInput[]
    createMany?: categoriaCreateManyAnuncioInputEnvelope
    connect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
  }

  export type servicoUncheckedCreateNestedManyWithoutAnuncioInput = {
    create?: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput> | servicoCreateWithoutAnuncioInput[] | servicoUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: servicoCreateOrConnectWithoutAnuncioInput | servicoCreateOrConnectWithoutAnuncioInput[]
    createMany?: servicoCreateManyAnuncioInputEnvelope
    connect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
  }

  export type caracteristicaUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput> | caracteristicaCreateWithoutAnuncioInput[] | caracteristicaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: caracteristicaCreateOrConnectWithoutAnuncioInput | caracteristicaCreateOrConnectWithoutAnuncioInput[]
    upsert?: caracteristicaUpsertWithWhereUniqueWithoutAnuncioInput | caracteristicaUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: caracteristicaCreateManyAnuncioInputEnvelope
    set?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    disconnect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    delete?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    connect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    update?: caracteristicaUpdateWithWhereUniqueWithoutAnuncioInput | caracteristicaUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: caracteristicaUpdateManyWithWhereWithoutAnuncioInput | caracteristicaUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: caracteristicaScalarWhereInput | caracteristicaScalarWhereInput[]
  }

  export type categoriaUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput> | categoriaCreateWithoutAnuncioInput[] | categoriaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: categoriaCreateOrConnectWithoutAnuncioInput | categoriaCreateOrConnectWithoutAnuncioInput[]
    upsert?: categoriaUpsertWithWhereUniqueWithoutAnuncioInput | categoriaUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: categoriaCreateManyAnuncioInputEnvelope
    set?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    disconnect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    delete?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    connect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    update?: categoriaUpdateWithWhereUniqueWithoutAnuncioInput | categoriaUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: categoriaUpdateManyWithWhereWithoutAnuncioInput | categoriaUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: categoriaScalarWhereInput | categoriaScalarWhereInput[]
  }

  export type servicoUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput> | servicoCreateWithoutAnuncioInput[] | servicoUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: servicoCreateOrConnectWithoutAnuncioInput | servicoCreateOrConnectWithoutAnuncioInput[]
    upsert?: servicoUpsertWithWhereUniqueWithoutAnuncioInput | servicoUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: servicoCreateManyAnuncioInputEnvelope
    set?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    disconnect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    delete?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    connect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    update?: servicoUpdateWithWhereUniqueWithoutAnuncioInput | servicoUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: servicoUpdateManyWithWhereWithoutAnuncioInput | servicoUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: servicoScalarWhereInput | servicoScalarWhereInput[]
  }

  export type usuarioUpdateOneRequiredWithoutAnuncioNestedInput = {
    create?: XOR<usuarioCreateWithoutAnuncioInput, usuarioUncheckedCreateWithoutAnuncioInput>
    connectOrCreate?: usuarioCreateOrConnectWithoutAnuncioInput
    upsert?: usuarioUpsertWithoutAnuncioInput
    connect?: usuarioWhereUniqueInput
    update?: XOR<XOR<usuarioUpdateToOneWithWhereWithoutAnuncioInput, usuarioUpdateWithoutAnuncioInput>, usuarioUncheckedUpdateWithoutAnuncioInput>
  }

  export type caracteristicaUncheckedUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput> | caracteristicaCreateWithoutAnuncioInput[] | caracteristicaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: caracteristicaCreateOrConnectWithoutAnuncioInput | caracteristicaCreateOrConnectWithoutAnuncioInput[]
    upsert?: caracteristicaUpsertWithWhereUniqueWithoutAnuncioInput | caracteristicaUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: caracteristicaCreateManyAnuncioInputEnvelope
    set?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    disconnect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    delete?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    connect?: caracteristicaWhereUniqueInput | caracteristicaWhereUniqueInput[]
    update?: caracteristicaUpdateWithWhereUniqueWithoutAnuncioInput | caracteristicaUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: caracteristicaUpdateManyWithWhereWithoutAnuncioInput | caracteristicaUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: caracteristicaScalarWhereInput | caracteristicaScalarWhereInput[]
  }

  export type categoriaUncheckedUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput> | categoriaCreateWithoutAnuncioInput[] | categoriaUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: categoriaCreateOrConnectWithoutAnuncioInput | categoriaCreateOrConnectWithoutAnuncioInput[]
    upsert?: categoriaUpsertWithWhereUniqueWithoutAnuncioInput | categoriaUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: categoriaCreateManyAnuncioInputEnvelope
    set?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    disconnect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    delete?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    connect?: categoriaWhereUniqueInput | categoriaWhereUniqueInput[]
    update?: categoriaUpdateWithWhereUniqueWithoutAnuncioInput | categoriaUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: categoriaUpdateManyWithWhereWithoutAnuncioInput | categoriaUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: categoriaScalarWhereInput | categoriaScalarWhereInput[]
  }

  export type servicoUncheckedUpdateManyWithoutAnuncioNestedInput = {
    create?: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput> | servicoCreateWithoutAnuncioInput[] | servicoUncheckedCreateWithoutAnuncioInput[]
    connectOrCreate?: servicoCreateOrConnectWithoutAnuncioInput | servicoCreateOrConnectWithoutAnuncioInput[]
    upsert?: servicoUpsertWithWhereUniqueWithoutAnuncioInput | servicoUpsertWithWhereUniqueWithoutAnuncioInput[]
    createMany?: servicoCreateManyAnuncioInputEnvelope
    set?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    disconnect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    delete?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    connect?: servicoWhereUniqueInput | servicoWhereUniqueInput[]
    update?: servicoUpdateWithWhereUniqueWithoutAnuncioInput | servicoUpdateWithWhereUniqueWithoutAnuncioInput[]
    updateMany?: servicoUpdateManyWithWhereWithoutAnuncioInput | servicoUpdateManyWithWhereWithoutAnuncioInput[]
    deleteMany?: servicoScalarWhereInput | servicoScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type anuncioCreateWithoutUsuarioInput = {
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    caracteristicas?: caracteristicaCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaCreateNestedManyWithoutAnuncioInput
    servicos?: servicoCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioUncheckedCreateWithoutUsuarioInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    caracteristicas?: caracteristicaUncheckedCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaUncheckedCreateNestedManyWithoutAnuncioInput
    servicos?: servicoUncheckedCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioCreateOrConnectWithoutUsuarioInput = {
    where: anuncioWhereUniqueInput
    create: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput>
  }

  export type anuncioCreateManyUsuarioInputEnvelope = {
    data: anuncioCreateManyUsuarioInput | anuncioCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type anuncioUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: anuncioWhereUniqueInput
    update: XOR<anuncioUpdateWithoutUsuarioInput, anuncioUncheckedUpdateWithoutUsuarioInput>
    create: XOR<anuncioCreateWithoutUsuarioInput, anuncioUncheckedCreateWithoutUsuarioInput>
  }

  export type anuncioUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: anuncioWhereUniqueInput
    data: XOR<anuncioUpdateWithoutUsuarioInput, anuncioUncheckedUpdateWithoutUsuarioInput>
  }

  export type anuncioUpdateManyWithWhereWithoutUsuarioInput = {
    where: anuncioScalarWhereInput
    data: XOR<anuncioUpdateManyMutationInput, anuncioUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type anuncioScalarWhereInput = {
    AND?: anuncioScalarWhereInput | anuncioScalarWhereInput[]
    OR?: anuncioScalarWhereInput[]
    NOT?: anuncioScalarWhereInput | anuncioScalarWhereInput[]
    id?: IntFilter<"anuncio"> | number
    identificador?: StringFilter<"anuncio"> | string
    titulo?: StringFilter<"anuncio"> | string
    data_fim?: DateTimeFilter<"anuncio"> | Date | string
    status?: BoolFilter<"anuncio"> | boolean
    descricao?: StringFilter<"anuncio"> | string
    caminho_pasta?: StringFilter<"anuncio"> | string
    cidade_id?: IntFilter<"anuncio"> | number
    estado_id?: IntFilter<"anuncio"> | number
    created_at?: DateTimeFilter<"anuncio"> | Date | string
    updated_at?: DateTimeFilter<"anuncio"> | Date | string
    usuario_id?: IntFilter<"anuncio"> | number
  }

  export type anuncioCreateWithoutCaracteristicasInput = {
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    categorias?: categoriaCreateNestedManyWithoutAnuncioInput
    servicos?: servicoCreateNestedManyWithoutAnuncioInput
    usuario: usuarioCreateNestedOneWithoutAnuncioInput
  }

  export type anuncioUncheckedCreateWithoutCaracteristicasInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: number
    categorias?: categoriaUncheckedCreateNestedManyWithoutAnuncioInput
    servicos?: servicoUncheckedCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioCreateOrConnectWithoutCaracteristicasInput = {
    where: anuncioWhereUniqueInput
    create: XOR<anuncioCreateWithoutCaracteristicasInput, anuncioUncheckedCreateWithoutCaracteristicasInput>
  }

  export type anuncioUpsertWithoutCaracteristicasInput = {
    update: XOR<anuncioUpdateWithoutCaracteristicasInput, anuncioUncheckedUpdateWithoutCaracteristicasInput>
    create: XOR<anuncioCreateWithoutCaracteristicasInput, anuncioUncheckedCreateWithoutCaracteristicasInput>
    where?: anuncioWhereInput
  }

  export type anuncioUpdateToOneWithWhereWithoutCaracteristicasInput = {
    where?: anuncioWhereInput
    data: XOR<anuncioUpdateWithoutCaracteristicasInput, anuncioUncheckedUpdateWithoutCaracteristicasInput>
  }

  export type anuncioUpdateWithoutCaracteristicasInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    categorias?: categoriaUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUpdateManyWithoutAnuncioNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateWithoutCaracteristicasInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: IntFieldUpdateOperationsInput | number
    categorias?: categoriaUncheckedUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUncheckedUpdateManyWithoutAnuncioNestedInput
  }

  export type anuncioCreateWithoutServicosInput = {
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    caracteristicas?: caracteristicaCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaCreateNestedManyWithoutAnuncioInput
    usuario: usuarioCreateNestedOneWithoutAnuncioInput
  }

  export type anuncioUncheckedCreateWithoutServicosInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: number
    caracteristicas?: caracteristicaUncheckedCreateNestedManyWithoutAnuncioInput
    categorias?: categoriaUncheckedCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioCreateOrConnectWithoutServicosInput = {
    where: anuncioWhereUniqueInput
    create: XOR<anuncioCreateWithoutServicosInput, anuncioUncheckedCreateWithoutServicosInput>
  }

  export type anuncioUpsertWithoutServicosInput = {
    update: XOR<anuncioUpdateWithoutServicosInput, anuncioUncheckedUpdateWithoutServicosInput>
    create: XOR<anuncioCreateWithoutServicosInput, anuncioUncheckedCreateWithoutServicosInput>
    where?: anuncioWhereInput
  }

  export type anuncioUpdateToOneWithWhereWithoutServicosInput = {
    where?: anuncioWhereInput
    data: XOR<anuncioUpdateWithoutServicosInput, anuncioUncheckedUpdateWithoutServicosInput>
  }

  export type anuncioUpdateWithoutServicosInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: caracteristicaUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUpdateManyWithoutAnuncioNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateWithoutServicosInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: IntFieldUpdateOperationsInput | number
    caracteristicas?: caracteristicaUncheckedUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUncheckedUpdateManyWithoutAnuncioNestedInput
  }

  export type anuncioCreateWithoutCategoriasInput = {
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    caracteristicas?: caracteristicaCreateNestedManyWithoutAnuncioInput
    servicos?: servicoCreateNestedManyWithoutAnuncioInput
    usuario: usuarioCreateNestedOneWithoutAnuncioInput
  }

  export type anuncioUncheckedCreateWithoutCategoriasInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
    usuario_id: number
    caracteristicas?: caracteristicaUncheckedCreateNestedManyWithoutAnuncioInput
    servicos?: servicoUncheckedCreateNestedManyWithoutAnuncioInput
  }

  export type anuncioCreateOrConnectWithoutCategoriasInput = {
    where: anuncioWhereUniqueInput
    create: XOR<anuncioCreateWithoutCategoriasInput, anuncioUncheckedCreateWithoutCategoriasInput>
  }

  export type anuncioUpsertWithoutCategoriasInput = {
    update: XOR<anuncioUpdateWithoutCategoriasInput, anuncioUncheckedUpdateWithoutCategoriasInput>
    create: XOR<anuncioCreateWithoutCategoriasInput, anuncioUncheckedCreateWithoutCategoriasInput>
    where?: anuncioWhereInput
  }

  export type anuncioUpdateToOneWithWhereWithoutCategoriasInput = {
    where?: anuncioWhereInput
    data: XOR<anuncioUpdateWithoutCategoriasInput, anuncioUncheckedUpdateWithoutCategoriasInput>
  }

  export type anuncioUpdateWithoutCategoriasInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: caracteristicaUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUpdateManyWithoutAnuncioNestedInput
    usuario?: usuarioUpdateOneRequiredWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateWithoutCategoriasInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario_id?: IntFieldUpdateOperationsInput | number
    caracteristicas?: caracteristicaUncheckedUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUncheckedUpdateManyWithoutAnuncioNestedInput
  }

  export type caracteristicaCreateWithoutAnuncioInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type caracteristicaUncheckedCreateWithoutAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type caracteristicaCreateOrConnectWithoutAnuncioInput = {
    where: caracteristicaWhereUniqueInput
    create: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput>
  }

  export type caracteristicaCreateManyAnuncioInputEnvelope = {
    data: caracteristicaCreateManyAnuncioInput | caracteristicaCreateManyAnuncioInput[]
    skipDuplicates?: boolean
  }

  export type categoriaCreateWithoutAnuncioInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type categoriaUncheckedCreateWithoutAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type categoriaCreateOrConnectWithoutAnuncioInput = {
    where: categoriaWhereUniqueInput
    create: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput>
  }

  export type categoriaCreateManyAnuncioInputEnvelope = {
    data: categoriaCreateManyAnuncioInput | categoriaCreateManyAnuncioInput[]
    skipDuplicates?: boolean
  }

  export type servicoCreateWithoutAnuncioInput = {
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type servicoUncheckedCreateWithoutAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type servicoCreateOrConnectWithoutAnuncioInput = {
    where: servicoWhereUniqueInput
    create: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput>
  }

  export type servicoCreateManyAnuncioInputEnvelope = {
    data: servicoCreateManyAnuncioInput | servicoCreateManyAnuncioInput[]
    skipDuplicates?: boolean
  }

  export type usuarioCreateWithoutAnuncioInput = {
    email: string
    name: string
    office: string
    phone: string
    whatsapp?: boolean
    password: string
    access_level?: number
    main_user?: boolean
    active?: boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usuarioUncheckedCreateWithoutAnuncioInput = {
    id?: number
    email: string
    name: string
    office: string
    phone: string
    whatsapp?: boolean
    password: string
    access_level?: number
    main_user?: boolean
    active?: boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usuarioCreateOrConnectWithoutAnuncioInput = {
    where: usuarioWhereUniqueInput
    create: XOR<usuarioCreateWithoutAnuncioInput, usuarioUncheckedCreateWithoutAnuncioInput>
  }

  export type caracteristicaUpsertWithWhereUniqueWithoutAnuncioInput = {
    where: caracteristicaWhereUniqueInput
    update: XOR<caracteristicaUpdateWithoutAnuncioInput, caracteristicaUncheckedUpdateWithoutAnuncioInput>
    create: XOR<caracteristicaCreateWithoutAnuncioInput, caracteristicaUncheckedCreateWithoutAnuncioInput>
  }

  export type caracteristicaUpdateWithWhereUniqueWithoutAnuncioInput = {
    where: caracteristicaWhereUniqueInput
    data: XOR<caracteristicaUpdateWithoutAnuncioInput, caracteristicaUncheckedUpdateWithoutAnuncioInput>
  }

  export type caracteristicaUpdateManyWithWhereWithoutAnuncioInput = {
    where: caracteristicaScalarWhereInput
    data: XOR<caracteristicaUpdateManyMutationInput, caracteristicaUncheckedUpdateManyWithoutAnuncioInput>
  }

  export type caracteristicaScalarWhereInput = {
    AND?: caracteristicaScalarWhereInput | caracteristicaScalarWhereInput[]
    OR?: caracteristicaScalarWhereInput[]
    NOT?: caracteristicaScalarWhereInput | caracteristicaScalarWhereInput[]
    id?: IntFilter<"caracteristica"> | number
    nome?: StringFilter<"caracteristica"> | string
    status?: BoolFilter<"caracteristica"> | boolean
    created_at?: DateTimeFilter<"caracteristica"> | Date | string
    updated_at?: DateTimeFilter<"caracteristica"> | Date | string
    anuncioId?: IntNullableFilter<"caracteristica"> | number | null
  }

  export type categoriaUpsertWithWhereUniqueWithoutAnuncioInput = {
    where: categoriaWhereUniqueInput
    update: XOR<categoriaUpdateWithoutAnuncioInput, categoriaUncheckedUpdateWithoutAnuncioInput>
    create: XOR<categoriaCreateWithoutAnuncioInput, categoriaUncheckedCreateWithoutAnuncioInput>
  }

  export type categoriaUpdateWithWhereUniqueWithoutAnuncioInput = {
    where: categoriaWhereUniqueInput
    data: XOR<categoriaUpdateWithoutAnuncioInput, categoriaUncheckedUpdateWithoutAnuncioInput>
  }

  export type categoriaUpdateManyWithWhereWithoutAnuncioInput = {
    where: categoriaScalarWhereInput
    data: XOR<categoriaUpdateManyMutationInput, categoriaUncheckedUpdateManyWithoutAnuncioInput>
  }

  export type categoriaScalarWhereInput = {
    AND?: categoriaScalarWhereInput | categoriaScalarWhereInput[]
    OR?: categoriaScalarWhereInput[]
    NOT?: categoriaScalarWhereInput | categoriaScalarWhereInput[]
    id?: IntFilter<"categoria"> | number
    nome?: StringFilter<"categoria"> | string
    status?: BoolFilter<"categoria"> | boolean
    created_at?: DateTimeFilter<"categoria"> | Date | string
    updated_at?: DateTimeFilter<"categoria"> | Date | string
    anuncioId?: IntNullableFilter<"categoria"> | number | null
  }

  export type servicoUpsertWithWhereUniqueWithoutAnuncioInput = {
    where: servicoWhereUniqueInput
    update: XOR<servicoUpdateWithoutAnuncioInput, servicoUncheckedUpdateWithoutAnuncioInput>
    create: XOR<servicoCreateWithoutAnuncioInput, servicoUncheckedCreateWithoutAnuncioInput>
  }

  export type servicoUpdateWithWhereUniqueWithoutAnuncioInput = {
    where: servicoWhereUniqueInput
    data: XOR<servicoUpdateWithoutAnuncioInput, servicoUncheckedUpdateWithoutAnuncioInput>
  }

  export type servicoUpdateManyWithWhereWithoutAnuncioInput = {
    where: servicoScalarWhereInput
    data: XOR<servicoUpdateManyMutationInput, servicoUncheckedUpdateManyWithoutAnuncioInput>
  }

  export type servicoScalarWhereInput = {
    AND?: servicoScalarWhereInput | servicoScalarWhereInput[]
    OR?: servicoScalarWhereInput[]
    NOT?: servicoScalarWhereInput | servicoScalarWhereInput[]
    id?: IntFilter<"servico"> | number
    nome?: StringFilter<"servico"> | string
    status?: BoolFilter<"servico"> | boolean
    created_at?: DateTimeFilter<"servico"> | Date | string
    updated_at?: DateTimeFilter<"servico"> | Date | string
    anuncioId?: IntNullableFilter<"servico"> | number | null
  }

  export type usuarioUpsertWithoutAnuncioInput = {
    update: XOR<usuarioUpdateWithoutAnuncioInput, usuarioUncheckedUpdateWithoutAnuncioInput>
    create: XOR<usuarioCreateWithoutAnuncioInput, usuarioUncheckedCreateWithoutAnuncioInput>
    where?: usuarioWhereInput
  }

  export type usuarioUpdateToOneWithWhereWithoutAnuncioInput = {
    where?: usuarioWhereInput
    data: XOR<usuarioUpdateWithoutAnuncioInput, usuarioUncheckedUpdateWithoutAnuncioInput>
  }

  export type usuarioUpdateWithoutAnuncioInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usuarioUncheckedUpdateWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    office?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    whatsapp?: BoolFieldUpdateOperationsInput | boolean
    password?: StringFieldUpdateOperationsInput | string
    access_level?: IntFieldUpdateOperationsInput | number
    main_user?: BoolFieldUpdateOperationsInput | boolean
    active?: BoolFieldUpdateOperationsInput | boolean
    fcm_tokens?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type anuncioCreateManyUsuarioInput = {
    id?: number
    identificador: string
    titulo: string
    data_fim: Date | string
    status?: boolean
    descricao: string
    caminho_pasta: string
    cidade_id: number
    estado_id: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type anuncioUpdateWithoutUsuarioInput = {
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: caracteristicaUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUpdateManyWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    caracteristicas?: caracteristicaUncheckedUpdateManyWithoutAnuncioNestedInput
    categorias?: categoriaUncheckedUpdateManyWithoutAnuncioNestedInput
    servicos?: servicoUncheckedUpdateManyWithoutAnuncioNestedInput
  }

  export type anuncioUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    identificador?: StringFieldUpdateOperationsInput | string
    titulo?: StringFieldUpdateOperationsInput | string
    data_fim?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: BoolFieldUpdateOperationsInput | boolean
    descricao?: StringFieldUpdateOperationsInput | string
    caminho_pasta?: StringFieldUpdateOperationsInput | string
    cidade_id?: IntFieldUpdateOperationsInput | number
    estado_id?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type caracteristicaCreateManyAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type categoriaCreateManyAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type servicoCreateManyAnuncioInput = {
    id?: number
    nome: string
    status?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type caracteristicaUpdateWithoutAnuncioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type caracteristicaUncheckedUpdateWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type caracteristicaUncheckedUpdateManyWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriaUpdateWithoutAnuncioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriaUncheckedUpdateWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriaUncheckedUpdateManyWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type servicoUpdateWithoutAnuncioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type servicoUncheckedUpdateWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type servicoUncheckedUpdateManyWithoutAnuncioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsuarioCountOutputTypeDefaultArgs instead
     */
    export type UsuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AnuncioCountOutputTypeDefaultArgs instead
     */
    export type AnuncioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AnuncioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usuarioDefaultArgs instead
     */
    export type usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use caracteristicaDefaultArgs instead
     */
    export type caracteristicaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = caracteristicaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use servicoDefaultArgs instead
     */
    export type servicoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = servicoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use categoriaDefaultArgs instead
     */
    export type categoriaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = categoriaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use anuncioDefaultArgs instead
     */
    export type anuncioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = anuncioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use configuracoesDefaultArgs instead
     */
    export type configuracoesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = configuracoesDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}