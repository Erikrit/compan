// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id           Int       @id @default(autoincrement())
  email        String    @db.VarChar(255)
  name         String    @db.VarChar(255)
  office       String    @db.VarChar(255)
  phone        String    @db.VarChar(255)
  whatsapp     Boolean   @default(false)
  password     String    @db.VarChar(255)
  access_level Int       @default(1)
  main_user    Boolean   @default(false)
  active       Boolean   @default(true)
  fcm_tokens   Json?     @db.JsonB
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  anuncio      anuncio[]

  @@unique([email])
  @@unique([id, main_user])
}

model caracteristica {
  id         Int      @id @default(autoincrement())
  nome       String   @db.VarChar(255)
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  anuncio    anuncio? @relation(fields: [anuncioId], references: [id])
  anuncioId  Int?
}

model servico {
  id         Int      @id @default(autoincrement())
  nome       String   @db.VarChar(255)
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  anuncio    anuncio? @relation(fields: [anuncioId], references: [id])
  anuncioId  Int?
}

model categoria {
  id         Int      @id @default(autoincrement())
  nome       String   @db.VarChar(255)
  status     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  anuncio    anuncio? @relation(fields: [anuncioId], references: [id])
  anuncioId  Int?
}

model anuncio {
  id              Int              @id @default(autoincrement())
  identificador   String           @db.VarChar(255)
  titulo          String           @db.VarChar(255)
  data_fim        DateTime
  status          Boolean          @default(true)
  descricao       String           @db.VarChar(255)
  caminho_pasta   String           @db.VarChar(255)
  cidade_id       Int
  estado_id       Int
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  caracteristicas caracteristica[]
  categorias      categoria[]
  servicos        servico[]
  usuario_id      Int
  usuario         usuario          @relation(fields: [usuario_id], references: [id])

  @@unique([id, usuario_id])
}

model configuracoes {
  id            Int      @id @default(autoincrement())
  ftp           String   @db.VarChar(255)
  usuario_ftp   String   @db.VarChar(255)
  senha_ftp     String   @db.VarChar(255)
  valor_anuncio Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}
